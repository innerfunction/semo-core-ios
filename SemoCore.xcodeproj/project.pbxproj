// !$*UTF8*$!
{
	archiveVersion = 1;
	classes = {
	};
	objectVersion = 46;
	objects = {

/* Begin PBXBuildFile section */
		070F6DE21AEC0A4700533CC1 /* configuration.json in Resources */ = {isa = PBXBuildFile; fileRef = 070F6DE11AEC0A4700533CC1 /* configuration.json */; };
		070F6DE41AEC0A6500533CC1 /* types.json in Resources */ = {isa = PBXBuildFile; fileRef = 070F6DE31AEC0A6500533CC1 /* types.json */; };
		07287EC91BD8F77400047B0C /* IFTargetContainer.h in Headers */ = {isa = PBXBuildFile; fileRef = 07287EC81BD8F77400047B0C /* IFTargetContainer.h */; settings = {ASSET_TAGS = (); }; };
		07287ECC1BD8F90C00047B0C /* IFDefaultTargetContainerBehaviour.h in Headers */ = {isa = PBXBuildFile; fileRef = 07287ECA1BD8F90C00047B0C /* IFDefaultTargetContainerBehaviour.h */; settings = {ASSET_TAGS = (); }; };
		07287ECD1BD8F90C00047B0C /* IFDefaultTargetContainerBehaviour.m in Sources */ = {isa = PBXBuildFile; fileRef = 07287ECB1BD8F90C00047B0C /* IFDefaultTargetContainerBehaviour.m */; settings = {ASSET_TAGS = (); }; };
		07287ED01BD8FF7F00047B0C /* IFStringRewriteRules.h in Headers */ = {isa = PBXBuildFile; fileRef = 07287ECE1BD8FF7F00047B0C /* IFStringRewriteRules.h */; settings = {ASSET_TAGS = (); }; };
		07287ED11BD8FF7F00047B0C /* IFStringRewriteRules.m in Sources */ = {isa = PBXBuildFile; fileRef = 07287ECF1BD8FF7F00047B0C /* IFStringRewriteRules.m */; settings = {ASSET_TAGS = (); }; };
		07287ED71BD92D2400047B0C /* IFTarget.h in Headers */ = {isa = PBXBuildFile; fileRef = 07287ED61BD92D2400047B0C /* IFTarget.h */; settings = {ASSET_TAGS = (); }; };
		07287EDB1BD9424800047B0C /* IFTargetContainerViewController.h in Headers */ = {isa = PBXBuildFile; fileRef = 07287ED91BD9424800047B0C /* IFTargetContainerViewController.h */; settings = {ASSET_TAGS = (); }; };
		07287EDC1BD9424800047B0C /* IFTargetContainerVIewController.m in Sources */ = {isa = PBXBuildFile; fileRef = 07287EDA1BD9424800047B0C /* IFTargetContainerVIewController.m */; settings = {ASSET_TAGS = (); }; };
		07287EDE1BD948E700047B0C /* IFActionDispatcher.h in Headers */ = {isa = PBXBuildFile; fileRef = 07287EDD1BD948E700047B0C /* IFActionDispatcher.h */; settings = {ASSET_TAGS = (); }; };
		07287EE31BD95EBE00047B0C /* IFDoScheme.h in Headers */ = {isa = PBXBuildFile; fileRef = 07287EE11BD95EBE00047B0C /* IFDoScheme.h */; settings = {ASSET_TAGS = (); }; };
		07287EE41BD95EBE00047B0C /* IFDoScheme.m in Sources */ = {isa = PBXBuildFile; fileRef = 07287EE21BD95EBE00047B0C /* IFDoScheme.m */; settings = {ASSET_TAGS = (); }; };
		07287EE71BD9768500047B0C /* IFNamedScheme.h in Headers */ = {isa = PBXBuildFile; fileRef = 07287EE51BD9768500047B0C /* IFNamedScheme.h */; settings = {ASSET_TAGS = (); }; };
		07287EE81BD9768500047B0C /* IFNamedScheme.m in Sources */ = {isa = PBXBuildFile; fileRef = 07287EE61BD9768500047B0C /* IFNamedScheme.m */; settings = {ASSET_TAGS = (); }; };
		07287EEB1BD9774B00047B0C /* IFNewScheme.h in Headers */ = {isa = PBXBuildFile; fileRef = 07287EE91BD9774B00047B0C /* IFNewScheme.h */; settings = {ASSET_TAGS = (); }; };
		07287EEC1BD9774B00047B0C /* IFNewScheme.m in Sources */ = {isa = PBXBuildFile; fileRef = 07287EEA1BD9774B00047B0C /* IFNewScheme.m */; settings = {ASSET_TAGS = (); }; };
		07287EEF1BD978AC00047B0C /* IFMakeScheme.h in Headers */ = {isa = PBXBuildFile; fileRef = 07287EED1BD978AC00047B0C /* IFMakeScheme.h */; settings = {ASSET_TAGS = (); }; };
		07287EF01BD978AC00047B0C /* IFMakeScheme.m in Sources */ = {isa = PBXBuildFile; fileRef = 07287EEE1BD978AC00047B0C /* IFMakeScheme.m */; settings = {ASSET_TAGS = (); }; };
		07287EF41BD9828400047B0C /* IFNavigationViewController.h in Headers */ = {isa = PBXBuildFile; fileRef = 07287EF21BD9828400047B0C /* IFNavigationViewController.h */; settings = {ASSET_TAGS = (); }; };
		07287EF51BD9828400047B0C /* IFNavigationViewController.m in Sources */ = {isa = PBXBuildFile; fileRef = 07287EF31BD9828400047B0C /* IFNavigationViewController.m */; settings = {ASSET_TAGS = (); }; };
		072D65391AEBFAF9009BC9A4 /* IOCConfigurable.m in Sources */ = {isa = PBXBuildFile; fileRef = 072D65381AEBFAF9009BC9A4 /* IOCConfigurable.m */; };
		074D9F431AE7DD04006D1510 /* Foundation.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 074D9F421AE7DD04006D1510 /* Foundation.framework */; };
		074D9F481AE7DD04006D1510 /* SemoCore-Prefix.pch in Headers */ = {isa = PBXBuildFile; fileRef = 074D9F471AE7DD04006D1510 /* SemoCore-Prefix.pch */; };
		074D9F4A1AE7DD04006D1510 /* SemoCore-Info.plist in Resources */ = {isa = PBXBuildFile; fileRef = 074D9F491AE7DD04006D1510 /* SemoCore-Info.plist */; };
		074D9F4C1AE7DD04006D1510 /* SemoCore.h in Headers */ = {isa = PBXBuildFile; fileRef = 074D9F4B1AE7DD04006D1510 /* SemoCore.h */; };
		074D9F4E1AE7DD04006D1510 /* SemoCore.m in Sources */ = {isa = PBXBuildFile; fileRef = 074D9F4D1AE7DD04006D1510 /* SemoCore.m */; };
		075C6C401AE9093F0021DB91 /* IFAppContainer.h in Headers */ = {isa = PBXBuildFile; fileRef = 075C6C3E1AE9093F0021DB91 /* IFAppContainer.h */; };
		075C6C411AE9093F0021DB91 /* IFAppContainer.m in Sources */ = {isa = PBXBuildFile; fileRef = 075C6C3F1AE9093F0021DB91 /* IFAppContainer.m */; };
		079A16B81AE7DDE800F22F4E /* IFCompoundURI.h in Headers */ = {isa = PBXBuildFile; fileRef = 079A168B1AE7DDE800F22F4E /* IFCompoundURI.h */; };
		079A16B91AE7DDE800F22F4E /* IFCompoundURI.m in Sources */ = {isa = PBXBuildFile; fileRef = 079A168C1AE7DDE800F22F4E /* IFCompoundURI.m */; };
		079A16BA1AE7DDE800F22F4E /* IFFileBasedSchemeHandler.h in Headers */ = {isa = PBXBuildFile; fileRef = 079A168D1AE7DDE800F22F4E /* IFFileBasedSchemeHandler.h */; };
		079A16BB1AE7DDE800F22F4E /* IFFileBasedSchemeHandler.m in Sources */ = {isa = PBXBuildFile; fileRef = 079A168E1AE7DDE800F22F4E /* IFFileBasedSchemeHandler.m */; };
		079A16BC1AE7DDE800F22F4E /* IFFileResource.h in Headers */ = {isa = PBXBuildFile; fileRef = 079A168F1AE7DDE800F22F4E /* IFFileResource.h */; };
		079A16BD1AE7DDE800F22F4E /* IFFileResource.m in Sources */ = {isa = PBXBuildFile; fileRef = 079A16901AE7DDE800F22F4E /* IFFileResource.m */; };
		079A16BE1AE7DDE800F22F4E /* IFLocalSchemeHandler.h in Headers */ = {isa = PBXBuildFile; fileRef = 079A16911AE7DDE800F22F4E /* IFLocalSchemeHandler.h */; };
		079A16BF1AE7DDE800F22F4E /* IFLocalSchemeHandler.m in Sources */ = {isa = PBXBuildFile; fileRef = 079A16921AE7DDE800F22F4E /* IFLocalSchemeHandler.m */; };
		079A16C01AE7DDE800F22F4E /* IFResource.h in Headers */ = {isa = PBXBuildFile; fileRef = 079A16931AE7DDE800F22F4E /* IFResource.h */; };
		079A16C11AE7DDE800F22F4E /* IFResource.m in Sources */ = {isa = PBXBuildFile; fileRef = 079A16941AE7DDE800F22F4E /* IFResource.m */; };
		079A16C31AE7DDE800F22F4E /* IFSchemeHandler.h in Headers */ = {isa = PBXBuildFile; fileRef = 079A16961AE7DDE800F22F4E /* IFSchemeHandler.h */; };
		079A16C41AE7DDE800F22F4E /* IFStringSchemeHandler.h in Headers */ = {isa = PBXBuildFile; fileRef = 079A16971AE7DDE800F22F4E /* IFStringSchemeHandler.h */; };
		079A16C51AE7DDE800F22F4E /* IFStringSchemeHandler.m in Sources */ = {isa = PBXBuildFile; fileRef = 079A16981AE7DDE800F22F4E /* IFStringSchemeHandler.m */; };
		079A16C61AE7DDE800F22F4E /* IFURIResolver.h in Headers */ = {isa = PBXBuildFile; fileRef = 079A16991AE7DDE800F22F4E /* IFURIResolver.h */; };
		079A16C71AE7DDE800F22F4E /* IFURIResolver.m in Sources */ = {isa = PBXBuildFile; fileRef = 079A169A1AE7DDE800F22F4E /* IFURIResolver.m */; };
		079A16CA1AE7DDE800F22F4E /* IFFileIO.h in Headers */ = {isa = PBXBuildFile; fileRef = 079A169E1AE7DDE800F22F4E /* IFFileIO.h */; };
		079A16CB1AE7DDE800F22F4E /* IFFileIO.m in Sources */ = {isa = PBXBuildFile; fileRef = 079A169F1AE7DDE800F22F4E /* IFFileIO.m */; };
		079A16CC1AE7DDE800F22F4E /* IFHTTPUtils.h in Headers */ = {isa = PBXBuildFile; fileRef = 079A16A01AE7DDE800F22F4E /* IFHTTPUtils.h */; };
		079A16CD1AE7DDE800F22F4E /* IFHTTPUtils.m in Sources */ = {isa = PBXBuildFile; fileRef = 079A16A11AE7DDE800F22F4E /* IFHTTPUtils.m */; };
		079A16CE1AE7DDE800F22F4E /* IFJSONData.h in Headers */ = {isa = PBXBuildFile; fileRef = 079A16A21AE7DDE800F22F4E /* IFJSONData.h */; };
		079A16CF1AE7DDE800F22F4E /* IFJSONData.m in Sources */ = {isa = PBXBuildFile; fileRef = 079A16A31AE7DDE800F22F4E /* IFJSONData.m */; };
		079A16D01AE7DDE800F22F4E /* IFRegExp.h in Headers */ = {isa = PBXBuildFile; fileRef = 079A16A41AE7DDE800F22F4E /* IFRegExp.h */; };
		079A16D11AE7DDE800F22F4E /* IFRegExp.m in Sources */ = {isa = PBXBuildFile; fileRef = 079A16A51AE7DDE800F22F4E /* IFRegExp.m */; };
		079A16D21AE7DDE800F22F4E /* IFStringTemplate.h in Headers */ = {isa = PBXBuildFile; fileRef = 079A16A61AE7DDE800F22F4E /* IFStringTemplate.h */; };
		079A16D31AE7DDE800F22F4E /* IFStringTemplate.m in Sources */ = {isa = PBXBuildFile; fileRef = 079A16A71AE7DDE800F22F4E /* IFStringTemplate.m */; };
		079A16D61AE7DDE800F22F4E /* IFTypeConversions.h in Headers */ = {isa = PBXBuildFile; fileRef = 079A16AA1AE7DDE800F22F4E /* IFTypeConversions.h */; };
		079A16D71AE7DDE800F22F4E /* IFTypeConversions.m in Sources */ = {isa = PBXBuildFile; fileRef = 079A16AB1AE7DDE800F22F4E /* IFTypeConversions.m */; };
		079A16DA1AE7DDE800F22F4E /* NSArray+IF.h in Headers */ = {isa = PBXBuildFile; fileRef = 079A16AE1AE7DDE800F22F4E /* NSArray+IF.h */; };
		079A16DB1AE7DDE800F22F4E /* NSArray+IF.m in Sources */ = {isa = PBXBuildFile; fileRef = 079A16AF1AE7DDE800F22F4E /* NSArray+IF.m */; };
		079A16DC1AE7DDE800F22F4E /* NSDictionary+IF.h in Headers */ = {isa = PBXBuildFile; fileRef = 079A16B01AE7DDE800F22F4E /* NSDictionary+IF.h */; };
		079A16DD1AE7DDE800F22F4E /* NSDictionary+IF.m in Sources */ = {isa = PBXBuildFile; fileRef = 079A16B11AE7DDE800F22F4E /* NSDictionary+IF.m */; };
		079A16DE1AE7DDE800F22F4E /* NSString+IF.h in Headers */ = {isa = PBXBuildFile; fileRef = 079A16B21AE7DDE800F22F4E /* NSString+IF.h */; };
		079A16DF1AE7DDE800F22F4E /* NSString+IF.m in Sources */ = {isa = PBXBuildFile; fileRef = 079A16B31AE7DDE800F22F4E /* NSString+IF.m */; };
		079A170D1AE7DF2D00F22F4E /* JSONKit.h in Headers */ = {isa = PBXBuildFile; fileRef = 079A16E81AE7DF2D00F22F4E /* JSONKit.h */; };
		079A170E1AE7DF2D00F22F4E /* JSONKit.m in Sources */ = {isa = PBXBuildFile; fileRef = 079A16E91AE7DF2D00F22F4E /* JSONKit.m */; settings = {COMPILER_FLAGS = "-fno-objc-arc"; }; };
		079A17241AE7DF2D00F22F4E /* crypt.h in Headers */ = {isa = PBXBuildFile; fileRef = 079A17021AE7DF2D00F22F4E /* crypt.h */; };
		079A17251AE7DF2D00F22F4E /* ioapi.c in Sources */ = {isa = PBXBuildFile; fileRef = 079A17031AE7DF2D00F22F4E /* ioapi.c */; };
		079A17261AE7DF2D00F22F4E /* ioapi.h in Headers */ = {isa = PBXBuildFile; fileRef = 079A17041AE7DF2D00F22F4E /* ioapi.h */; };
		079A17271AE7DF2D00F22F4E /* mztools.c in Sources */ = {isa = PBXBuildFile; fileRef = 079A17051AE7DF2D00F22F4E /* mztools.c */; };
		079A17281AE7DF2D00F22F4E /* mztools.h in Headers */ = {isa = PBXBuildFile; fileRef = 079A17061AE7DF2D00F22F4E /* mztools.h */; };
		079A17291AE7DF2D00F22F4E /* unzip.c in Sources */ = {isa = PBXBuildFile; fileRef = 079A17071AE7DF2D00F22F4E /* unzip.c */; };
		079A172A1AE7DF2D00F22F4E /* unzip.h in Headers */ = {isa = PBXBuildFile; fileRef = 079A17081AE7DF2D00F22F4E /* unzip.h */; };
		079A172B1AE7DF2D00F22F4E /* zip.c in Sources */ = {isa = PBXBuildFile; fileRef = 079A17091AE7DF2D00F22F4E /* zip.c */; };
		079A172C1AE7DF2D00F22F4E /* zip.h in Headers */ = {isa = PBXBuildFile; fileRef = 079A170A1AE7DF2D00F22F4E /* zip.h */; };
		079A172D1AE7DF2D00F22F4E /* ZipArchive.h in Headers */ = {isa = PBXBuildFile; fileRef = 079A170B1AE7DF2D00F22F4E /* ZipArchive.h */; };
		079A172E1AE7DF2D00F22F4E /* ZipArchive.mm in Sources */ = {isa = PBXBuildFile; fileRef = 079A170C1AE7DF2D00F22F4E /* ZipArchive.mm */; settings = {COMPILER_FLAGS = "-fno-objc-arc"; }; };
		079A17321AE7E15D00F22F4E /* ISO8601DateFormatter.h in Headers */ = {isa = PBXBuildFile; fileRef = 079A17301AE7E15D00F22F4E /* ISO8601DateFormatter.h */; };
		079A17331AE7E15D00F22F4E /* ISO8601DateFormatter.m in Sources */ = {isa = PBXBuildFile; fileRef = 079A17311AE7E15D00F22F4E /* ISO8601DateFormatter.m */; settings = {COMPILER_FLAGS = "-fno-objc-arc"; }; };
		079A17461AE7E3A600F22F4E /* DDAbstractDatabaseLogger.h in Headers */ = {isa = PBXBuildFile; fileRef = 079A17361AE7E3A600F22F4E /* DDAbstractDatabaseLogger.h */; };
		079A17471AE7E3A600F22F4E /* DDAbstractDatabaseLogger.m in Sources */ = {isa = PBXBuildFile; fileRef = 079A17371AE7E3A600F22F4E /* DDAbstractDatabaseLogger.m */; };
		079A17481AE7E3A600F22F4E /* DDASLLogger.h in Headers */ = {isa = PBXBuildFile; fileRef = 079A17381AE7E3A600F22F4E /* DDASLLogger.h */; };
		079A17491AE7E3A600F22F4E /* DDASLLogger.m in Sources */ = {isa = PBXBuildFile; fileRef = 079A17391AE7E3A600F22F4E /* DDASLLogger.m */; };
		079A174A1AE7E3A600F22F4E /* DDFileLogger.h in Headers */ = {isa = PBXBuildFile; fileRef = 079A173A1AE7E3A600F22F4E /* DDFileLogger.h */; };
		079A174B1AE7E3A600F22F4E /* DDFileLogger.m in Sources */ = {isa = PBXBuildFile; fileRef = 079A173B1AE7E3A600F22F4E /* DDFileLogger.m */; };
		079A174C1AE7E3A600F22F4E /* DDLog.h in Headers */ = {isa = PBXBuildFile; fileRef = 079A173C1AE7E3A600F22F4E /* DDLog.h */; };
		079A174D1AE7E3A600F22F4E /* DDLog.m in Sources */ = {isa = PBXBuildFile; fileRef = 079A173D1AE7E3A600F22F4E /* DDLog.m */; };
		079A174E1AE7E3A600F22F4E /* DDTTYLogger.h in Headers */ = {isa = PBXBuildFile; fileRef = 079A173E1AE7E3A600F22F4E /* DDTTYLogger.h */; };
		079A174F1AE7E3A600F22F4E /* DDTTYLogger.m in Sources */ = {isa = PBXBuildFile; fileRef = 079A173F1AE7E3A600F22F4E /* DDTTYLogger.m */; };
		079A17501AE7E3A600F22F4E /* ContextFilterLogFormatter.h in Headers */ = {isa = PBXBuildFile; fileRef = 079A17411AE7E3A600F22F4E /* ContextFilterLogFormatter.h */; };
		079A17511AE7E3A600F22F4E /* ContextFilterLogFormatter.m in Sources */ = {isa = PBXBuildFile; fileRef = 079A17421AE7E3A600F22F4E /* ContextFilterLogFormatter.m */; };
		079A17521AE7E3A600F22F4E /* DispatchQueueLogFormatter.h in Headers */ = {isa = PBXBuildFile; fileRef = 079A17431AE7E3A600F22F4E /* DispatchQueueLogFormatter.h */; };
		079A17531AE7E3A600F22F4E /* DispatchQueueLogFormatter.m in Sources */ = {isa = PBXBuildFile; fileRef = 079A17441AE7E3A600F22F4E /* DispatchQueueLogFormatter.m */; };
		079A17541AE7E3A600F22F4E /* README.txt in Resources */ = {isa = PBXBuildFile; fileRef = 079A17451AE7E3A600F22F4E /* README.txt */; };
		079A17561AE7E5BB00F22F4E /* UIKit.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 079A17551AE7E5BB00F22F4E /* UIKit.framework */; };
		079A17591AE7EA8800F22F4E /* IFService.h in Headers */ = {isa = PBXBuildFile; fileRef = 079A17581AE7EA8800F22F4E /* IFService.h */; };
		079A175B1AE7EABD00F22F4E /* IFIOCConfigurable.h in Headers */ = {isa = PBXBuildFile; fileRef = 079A175A1AE7EABD00F22F4E /* IFIOCConfigurable.h */; };
		079A175D1AE7EAE400F22F4E /* IFConfigurable.h in Headers */ = {isa = PBXBuildFile; fileRef = 079A175C1AE7EAE400F22F4E /* IFConfigurable.h */; };
		079A17601AE7EB1B00F22F4E /* IFConfiguration.h in Headers */ = {isa = PBXBuildFile; fileRef = 079A175E1AE7EB1B00F22F4E /* IFConfiguration.h */; };
		079A17611AE7EB1B00F22F4E /* IFConfiguration.m in Sources */ = {isa = PBXBuildFile; fileRef = 079A175F1AE7EB1B00F22F4E /* IFConfiguration.m */; };
		079A17631AE7EBAD00F22F4E /* IFValues.h in Headers */ = {isa = PBXBuildFile; fileRef = 079A17621AE7EBAD00F22F4E /* IFValues.h */; };
		079A17661AE7EC8000F22F4E /* UIColor+IF.h in Headers */ = {isa = PBXBuildFile; fileRef = 079A17641AE7EC8000F22F4E /* UIColor+IF.h */; };
		079A17671AE7EC8000F22F4E /* UIColor+IF.m in Sources */ = {isa = PBXBuildFile; fileRef = 079A17651AE7EC8000F22F4E /* UIColor+IF.m */; };
		079A176A1AE7EE7600F22F4E /* IFLocals.h in Headers */ = {isa = PBXBuildFile; fileRef = 079A17681AE7EE7600F22F4E /* IFLocals.h */; };
		079A176B1AE7EE7600F22F4E /* IFLocals.m in Sources */ = {isa = PBXBuildFile; fileRef = 079A17691AE7EE7600F22F4E /* IFLocals.m */; };
		079A176E1AE7F3F800F22F4E /* IFConfiguredLocals.h in Headers */ = {isa = PBXBuildFile; fileRef = 079A176C1AE7F3F800F22F4E /* IFConfiguredLocals.h */; };
		079A176F1AE7F3F800F22F4E /* IFConfiguredLocals.m in Sources */ = {isa = PBXBuildFile; fileRef = 079A176D1AE7F3F800F22F4E /* IFConfiguredLocals.m */; };
		079A17721AE7F80B00F22F4E /* IFContainer.h in Headers */ = {isa = PBXBuildFile; fileRef = 079A17701AE7F80B00F22F4E /* IFContainer.h */; };
		079A17731AE7F80B00F22F4E /* IFContainer.m in Sources */ = {isa = PBXBuildFile; fileRef = 079A17711AE7F80B00F22F4E /* IFContainer.m */; };
		079ECCAB1AE8441900A3DD41 /* IFTypeInfo.h in Headers */ = {isa = PBXBuildFile; fileRef = 079ECCA91AE8441900A3DD41 /* IFTypeInfo.h */; };
		079ECCAC1AE8441900A3DD41 /* IFTypeInfo.m in Sources */ = {isa = PBXBuildFile; fileRef = 079ECCAA1AE8441900A3DD41 /* IFTypeInfo.m */; };
		07D025221AEAC1D200C2A619 /* IFI18nMap.h in Headers */ = {isa = PBXBuildFile; fileRef = 07D025201AEAC1D200C2A619 /* IFI18nMap.h */; };
		07D025231AEAC1D200C2A619 /* IFI18nMap.m in Sources */ = {isa = PBXBuildFile; fileRef = 07D025211AEAC1D200C2A619 /* IFI18nMap.m */; };
		07E287F21AEBA7750078B95B /* XCTest.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 07E287F11AEBA7750078B95B /* XCTest.framework */; };
		07E287F31AEBA7750078B95B /* Foundation.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 074D9F421AE7DD04006D1510 /* Foundation.framework */; };
		07E287F41AEBA7750078B95B /* UIKit.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 079A17551AE7E5BB00F22F4E /* UIKit.framework */; };
		07E287FA1AEBA7750078B95B /* InfoPlist.strings in Resources */ = {isa = PBXBuildFile; fileRef = 07E287F81AEBA7750078B95B /* InfoPlist.strings */; };
		07E287FC1AEBA7750078B95B /* SemoCore_Tests.m in Sources */ = {isa = PBXBuildFile; fileRef = 07E287FB1AEBA7750078B95B /* SemoCore_Tests.m */; };
		07E288041AEBA9080078B95B /* AppContainerTest.m in Sources */ = {isa = PBXBuildFile; fileRef = 07E288031AEBA9080078B95B /* AppContainerTest.m */; };
		07E288071AEBA96A0078B95B /* Thing.m in Sources */ = {isa = PBXBuildFile; fileRef = 07E288061AEBA96A0078B95B /* Thing.m */; };
		07E2880A1AEBA98F0078B95B /* Color.m in Sources */ = {isa = PBXBuildFile; fileRef = 07E288091AEBA98F0078B95B /* Color.m */; };
		07E2880D1AEBA9CE0078B95B /* Fruit.m in Sources */ = {isa = PBXBuildFile; fileRef = 07E2880C1AEBA9CE0078B95B /* Fruit.m */; };
		07E288101AEBA9F60078B95B /* Animal.m in Sources */ = {isa = PBXBuildFile; fileRef = 07E2880F1AEBA9F60078B95B /* Animal.m */; };
		07E288131AEBAC7F0078B95B /* Plant.m in Sources */ = {isa = PBXBuildFile; fileRef = 07E288121AEBAC7F0078B95B /* Plant.m */; };
		07E288161AEBAD3C0078B95B /* Forest.m in Sources */ = {isa = PBXBuildFile; fileRef = 07E288151AEBAD3C0078B95B /* Forest.m */; };
		07E288191AEBADA80078B95B /* Configurable.m in Sources */ = {isa = PBXBuildFile; fileRef = 07E288181AEBADA80078B95B /* Configurable.m */; };
		07E3CFA21BD98D290036722B /* SWRevealViewController.h in Headers */ = {isa = PBXBuildFile; fileRef = 07E3CFA01BD98D290036722B /* SWRevealViewController.h */; settings = {ASSET_TAGS = (); }; };
		07E3CFA31BD98D290036722B /* SWRevealViewController.m in Sources */ = {isa = PBXBuildFile; fileRef = 07E3CFA11BD98D290036722B /* SWRevealViewController.m */; settings = {ASSET_TAGS = (); }; };
		07E3CFA61BD98D930036722B /* IFSlideViewController.h in Headers */ = {isa = PBXBuildFile; fileRef = 07E3CFA41BD98D930036722B /* IFSlideViewController.h */; settings = {ASSET_TAGS = (); }; };
		07E3CFA71BD98D930036722B /* IFSlideViewController.m in Sources */ = {isa = PBXBuildFile; fileRef = 07E3CFA51BD98D930036722B /* IFSlideViewController.m */; settings = {ASSET_TAGS = (); }; };
		07E3CFAB1BDA73C50036722B /* IFProxyTargetContainer.h in Headers */ = {isa = PBXBuildFile; fileRef = 07E3CFA91BDA73C50036722B /* IFProxyTargetContainer.h */; settings = {ASSET_TAGS = (); }; };
		07E3CFAC1BDA73C50036722B /* IFProxyTargetContainer.m in Sources */ = {isa = PBXBuildFile; fileRef = 07E3CFAA1BDA73C50036722B /* IFProxyTargetContainer.m */; settings = {ASSET_TAGS = (); }; };
		07E3CFB61BDADE550036722B /* IFWebViewController.h in Headers */ = {isa = PBXBuildFile; fileRef = 07E3CFB41BDADE550036722B /* IFWebViewController.h */; settings = {ASSET_TAGS = (); }; };
		07E3CFB71BDADE550036722B /* IFWebViewController.m in Sources */ = {isa = PBXBuildFile; fileRef = 07E3CFB51BDADE550036722B /* IFWebViewController.m */; settings = {ASSET_TAGS = (); }; };
		07E3CFBD1BDC0A2F0036722B /* IFTableData.h in Headers */ = {isa = PBXBuildFile; fileRef = 07E3CFBB1BDC0A2E0036722B /* IFTableData.h */; settings = {ASSET_TAGS = (); }; };
		07E3CFBE1BDC0A2F0036722B /* IFTableData.m in Sources */ = {isa = PBXBuildFile; fileRef = 07E3CFBC1BDC0A2E0036722B /* IFTableData.m */; settings = {ASSET_TAGS = (); }; };
		07E3CFC11BDC11CC0036722B /* IFTableViewCellFactory.h in Headers */ = {isa = PBXBuildFile; fileRef = 07E3CFBF1BDC11CC0036722B /* IFTableViewCellFactory.h */; settings = {ASSET_TAGS = (); }; };
		07E3CFC21BDC11CC0036722B /* IFTableViewCellFactory.m in Sources */ = {isa = PBXBuildFile; fileRef = 07E3CFC01BDC11CC0036722B /* IFTableViewCellFactory.m */; settings = {ASSET_TAGS = (); }; };
		07E3CFC51BDC15390036722B /* IFTableViewController.h in Headers */ = {isa = PBXBuildFile; fileRef = 07E3CFC31BDC15390036722B /* IFTableViewController.h */; settings = {ASSET_TAGS = (); }; };
		07E3CFC61BDC15390036722B /* IFTableViewController.m in Sources */ = {isa = PBXBuildFile; fileRef = 07E3CFC41BDC15390036722B /* IFTableViewController.m */; settings = {ASSET_TAGS = (); }; };
		07E3CFC81BDE5A2B0036722B /* IFIOCConfigurationInitable.h in Headers */ = {isa = PBXBuildFile; fileRef = 07E3CFC71BDE5A2B0036722B /* IFIOCConfigurationInitable.h */; settings = {ASSET_TAGS = (); }; };
		07E3CFCA1BDE5E960036722B /* IFIOCContainerAware.h in Headers */ = {isa = PBXBuildFile; fileRef = 07E3CFC91BDE5E960036722B /* IFIOCContainerAware.h */; settings = {ASSET_TAGS = (); }; };
		07E3CFCE1BDE6B1F0036722B /* UIView+Toast.h in Headers */ = {isa = PBXBuildFile; fileRef = 07E3CFCC1BDE6B1F0036722B /* UIView+Toast.h */; settings = {ASSET_TAGS = (); }; };
		07E3CFCF1BDE6B1F0036722B /* UIView+Toast.m in Sources */ = {isa = PBXBuildFile; fileRef = 07E3CFCD1BDE6B1F0036722B /* UIView+Toast.m */; settings = {ASSET_TAGS = (); }; };
		07E3CFD21BDE6BF00036722B /* UIViewController+Toast.h in Headers */ = {isa = PBXBuildFile; fileRef = 07E3CFD01BDE6BF00036722B /* UIViewController+Toast.h */; settings = {ASSET_TAGS = (); }; };
		07E3CFD31BDE6BF00036722B /* UIViewController+Toast.m in Sources */ = {isa = PBXBuildFile; fileRef = 07E3CFD11BDE6BF00036722B /* UIViewController+Toast.m */; settings = {ASSET_TAGS = (); }; };
		07E3CFD61BDE6E360036722B /* NSDictionary+IFValues.h in Headers */ = {isa = PBXBuildFile; fileRef = 07E3CFD41BDE6E360036722B /* NSDictionary+IFValues.h */; settings = {ASSET_TAGS = (); }; };
		07E3CFD71BDE6E360036722B /* NSDictionary+IFValues.m in Sources */ = {isa = PBXBuildFile; fileRef = 07E3CFD51BDE6E360036722B /* NSDictionary+IFValues.m */; settings = {ASSET_TAGS = (); }; };
		07E3CFDA1BDEC1B20036722B /* UIImage+CropScale.h in Headers */ = {isa = PBXBuildFile; fileRef = 07E3CFD81BDEC1B20036722B /* UIImage+CropScale.h */; settings = {ASSET_TAGS = (); }; };
		07E3CFDB1BDEC1B20036722B /* UIImage+CropScale.m in Sources */ = {isa = PBXBuildFile; fileRef = 07E3CFD91BDEC1B20036722B /* UIImage+CropScale.m */; settings = {ASSET_TAGS = (); }; };
		DEC9697D045094EC7020060D /* libPods.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 43B3ADE948579F28497A3712 /* libPods.a */; };
/* End PBXBuildFile section */

/* Begin PBXContainerItemProxy section */
		07E287FE1AEBA7750078B95B /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 074D9F351AE7DD04006D1510 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 074D9F3E1AE7DD04006D1510;
			remoteInfo = SemoCore;
		};
/* End PBXContainerItemProxy section */

/* Begin PBXFileReference section */
		070F6DE11AEC0A4700533CC1 /* configuration.json */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text.json; path = configuration.json; sourceTree = "<group>"; };
		070F6DE31AEC0A6500533CC1 /* types.json */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text.json; path = types.json; sourceTree = "<group>"; };
		07287EC81BD8F77400047B0C /* IFTargetContainer.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = IFTargetContainer.h; sourceTree = "<group>"; };
		07287ECA1BD8F90C00047B0C /* IFDefaultTargetContainerBehaviour.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = IFDefaultTargetContainerBehaviour.h; sourceTree = "<group>"; };
		07287ECB1BD8F90C00047B0C /* IFDefaultTargetContainerBehaviour.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = IFDefaultTargetContainerBehaviour.m; sourceTree = "<group>"; };
		07287ECE1BD8FF7F00047B0C /* IFStringRewriteRules.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = IFStringRewriteRules.h; sourceTree = "<group>"; };
		07287ECF1BD8FF7F00047B0C /* IFStringRewriteRules.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = IFStringRewriteRules.m; sourceTree = "<group>"; };
		07287ED61BD92D2400047B0C /* IFTarget.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = IFTarget.h; sourceTree = "<group>"; };
		07287ED91BD9424800047B0C /* IFTargetContainerViewController.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = IFTargetContainerViewController.h; sourceTree = "<group>"; };
		07287EDA1BD9424800047B0C /* IFTargetContainerVIewController.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = IFTargetContainerVIewController.m; sourceTree = "<group>"; };
		07287EDD1BD948E700047B0C /* IFActionDispatcher.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = IFActionDispatcher.h; sourceTree = "<group>"; };
		07287EE11BD95EBE00047B0C /* IFDoScheme.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = IFDoScheme.h; sourceTree = "<group>"; };
		07287EE21BD95EBE00047B0C /* IFDoScheme.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = IFDoScheme.m; sourceTree = "<group>"; };
		07287EE51BD9768500047B0C /* IFNamedScheme.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = IFNamedScheme.h; sourceTree = "<group>"; };
		07287EE61BD9768500047B0C /* IFNamedScheme.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = IFNamedScheme.m; sourceTree = "<group>"; };
		07287EE91BD9774B00047B0C /* IFNewScheme.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = IFNewScheme.h; sourceTree = "<group>"; };
		07287EEA1BD9774B00047B0C /* IFNewScheme.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = IFNewScheme.m; sourceTree = "<group>"; };
		07287EED1BD978AC00047B0C /* IFMakeScheme.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = IFMakeScheme.h; sourceTree = "<group>"; };
		07287EEE1BD978AC00047B0C /* IFMakeScheme.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = IFMakeScheme.m; sourceTree = "<group>"; };
		07287EF21BD9828400047B0C /* IFNavigationViewController.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = IFNavigationViewController.h; path = com.innerfunction.semo/IFNavigationViewController.h; sourceTree = "<group>"; };
		07287EF31BD9828400047B0C /* IFNavigationViewController.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; name = IFNavigationViewController.m; path = com.innerfunction.semo/IFNavigationViewController.m; sourceTree = "<group>"; };
		072D65371AEBFAF9009BC9A4 /* IOCConfigurable.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = IOCConfigurable.h; sourceTree = "<group>"; };
		072D65381AEBFAF9009BC9A4 /* IOCConfigurable.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = IOCConfigurable.m; sourceTree = "<group>"; };
		074D9F3F1AE7DD04006D1510 /* libSemoCore.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; includeInIndex = 0; path = libSemoCore.a; sourceTree = BUILT_PRODUCTS_DIR; };
		074D9F421AE7DD04006D1510 /* Foundation.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = Foundation.framework; path = /System/Library/Frameworks/Foundation.framework; sourceTree = "<absolute>"; };
		074D9F461AE7DD04006D1510 /* Info.plist */ = {isa = PBXFileReference; lastKnownFileType = text.plist.xml; path = Info.plist; sourceTree = "<group>"; };
		074D9F471AE7DD04006D1510 /* SemoCore-Prefix.pch */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = "SemoCore-Prefix.pch"; sourceTree = "<group>"; };
		074D9F491AE7DD04006D1510 /* SemoCore-Info.plist */ = {isa = PBXFileReference; lastKnownFileType = text.plist.xml; path = "SemoCore-Info.plist"; sourceTree = "<group>"; };
		074D9F4B1AE7DD04006D1510 /* SemoCore.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = SemoCore.h; sourceTree = "<group>"; };
		074D9F4D1AE7DD04006D1510 /* SemoCore.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; path = SemoCore.m; sourceTree = "<group>"; };
		075A31351AE9817300FC8615 /* IFIOCTypeInspectable.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = IFIOCTypeInspectable.h; sourceTree = "<group>"; };
		075C6C3E1AE9093F0021DB91 /* IFAppContainer.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = IFAppContainer.h; sourceTree = "<group>"; };
		075C6C3F1AE9093F0021DB91 /* IFAppContainer.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = IFAppContainer.m; sourceTree = "<group>"; };
		079A168B1AE7DDE800F22F4E /* IFCompoundURI.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = IFCompoundURI.h; sourceTree = "<group>"; };
		079A168C1AE7DDE800F22F4E /* IFCompoundURI.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = IFCompoundURI.m; sourceTree = "<group>"; };
		079A168D1AE7DDE800F22F4E /* IFFileBasedSchemeHandler.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = IFFileBasedSchemeHandler.h; sourceTree = "<group>"; };
		079A168E1AE7DDE800F22F4E /* IFFileBasedSchemeHandler.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = IFFileBasedSchemeHandler.m; sourceTree = "<group>"; };
		079A168F1AE7DDE800F22F4E /* IFFileResource.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = IFFileResource.h; sourceTree = "<group>"; };
		079A16901AE7DDE800F22F4E /* IFFileResource.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = IFFileResource.m; sourceTree = "<group>"; };
		079A16911AE7DDE800F22F4E /* IFLocalSchemeHandler.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = IFLocalSchemeHandler.h; sourceTree = "<group>"; };
		079A16921AE7DDE800F22F4E /* IFLocalSchemeHandler.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = IFLocalSchemeHandler.m; sourceTree = "<group>"; };
		079A16931AE7DDE800F22F4E /* IFResource.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = IFResource.h; sourceTree = "<group>"; };
		079A16941AE7DDE800F22F4E /* IFResource.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = IFResource.m; sourceTree = "<group>"; };
		079A16961AE7DDE800F22F4E /* IFSchemeHandler.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = IFSchemeHandler.h; sourceTree = "<group>"; };
		079A16971AE7DDE800F22F4E /* IFStringSchemeHandler.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = IFStringSchemeHandler.h; sourceTree = "<group>"; };
		079A16981AE7DDE800F22F4E /* IFStringSchemeHandler.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = IFStringSchemeHandler.m; sourceTree = "<group>"; };
		079A16991AE7DDE800F22F4E /* IFURIResolver.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = IFURIResolver.h; sourceTree = "<group>"; };
		079A169A1AE7DDE800F22F4E /* IFURIResolver.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = IFURIResolver.m; sourceTree = "<group>"; };
		079A169E1AE7DDE800F22F4E /* IFFileIO.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = IFFileIO.h; sourceTree = "<group>"; };
		079A169F1AE7DDE800F22F4E /* IFFileIO.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = IFFileIO.m; sourceTree = "<group>"; };
		079A16A01AE7DDE800F22F4E /* IFHTTPUtils.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = IFHTTPUtils.h; sourceTree = "<group>"; };
		079A16A11AE7DDE800F22F4E /* IFHTTPUtils.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = IFHTTPUtils.m; sourceTree = "<group>"; };
		079A16A21AE7DDE800F22F4E /* IFJSONData.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = IFJSONData.h; sourceTree = "<group>"; };
		079A16A31AE7DDE800F22F4E /* IFJSONData.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = IFJSONData.m; sourceTree = "<group>"; };
		079A16A41AE7DDE800F22F4E /* IFRegExp.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = IFRegExp.h; sourceTree = "<group>"; };
		079A16A51AE7DDE800F22F4E /* IFRegExp.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = IFRegExp.m; sourceTree = "<group>"; };
		079A16A61AE7DDE800F22F4E /* IFStringTemplate.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = IFStringTemplate.h; sourceTree = "<group>"; };
		079A16A71AE7DDE800F22F4E /* IFStringTemplate.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = IFStringTemplate.m; sourceTree = "<group>"; };
		079A16AA1AE7DDE800F22F4E /* IFTypeConversions.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = IFTypeConversions.h; sourceTree = "<group>"; };
		079A16AB1AE7DDE800F22F4E /* IFTypeConversions.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = IFTypeConversions.m; sourceTree = "<group>"; };
		079A16AE1AE7DDE800F22F4E /* NSArray+IF.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = "NSArray+IF.h"; sourceTree = "<group>"; };
		079A16AF1AE7DDE800F22F4E /* NSArray+IF.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = "NSArray+IF.m"; sourceTree = "<group>"; };
		079A16B01AE7DDE800F22F4E /* NSDictionary+IF.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = "NSDictionary+IF.h"; sourceTree = "<group>"; };
		079A16B11AE7DDE800F22F4E /* NSDictionary+IF.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = "NSDictionary+IF.m"; sourceTree = "<group>"; };
		079A16B21AE7DDE800F22F4E /* NSString+IF.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = "NSString+IF.h"; sourceTree = "<group>"; };
		079A16B31AE7DDE800F22F4E /* NSString+IF.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = "NSString+IF.m"; sourceTree = "<group>"; };
		079A16E81AE7DF2D00F22F4E /* JSONKit.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = JSONKit.h; sourceTree = "<group>"; };
		079A16E91AE7DF2D00F22F4E /* JSONKit.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = JSONKit.m; sourceTree = "<group>"; };
		079A17021AE7DF2D00F22F4E /* crypt.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = crypt.h; sourceTree = "<group>"; };
		079A17031AE7DF2D00F22F4E /* ioapi.c */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.c; path = ioapi.c; sourceTree = "<group>"; };
		079A17041AE7DF2D00F22F4E /* ioapi.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = ioapi.h; sourceTree = "<group>"; };
		079A17051AE7DF2D00F22F4E /* mztools.c */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.c; path = mztools.c; sourceTree = "<group>"; };
		079A17061AE7DF2D00F22F4E /* mztools.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = mztools.h; sourceTree = "<group>"; };
		079A17071AE7DF2D00F22F4E /* unzip.c */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.c; path = unzip.c; sourceTree = "<group>"; };
		079A17081AE7DF2D00F22F4E /* unzip.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = unzip.h; sourceTree = "<group>"; };
		079A17091AE7DF2D00F22F4E /* zip.c */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.c; path = zip.c; sourceTree = "<group>"; };
		079A170A1AE7DF2D00F22F4E /* zip.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = zip.h; sourceTree = "<group>"; };
		079A170B1AE7DF2D00F22F4E /* ZipArchive.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = ZipArchive.h; sourceTree = "<group>"; };
		079A170C1AE7DF2D00F22F4E /* ZipArchive.mm */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.objcpp; path = ZipArchive.mm; sourceTree = "<group>"; };
		079A17301AE7E15D00F22F4E /* ISO8601DateFormatter.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = ISO8601DateFormatter.h; sourceTree = "<group>"; };
		079A17311AE7E15D00F22F4E /* ISO8601DateFormatter.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = ISO8601DateFormatter.m; sourceTree = "<group>"; };
		079A17341AE7E34100F22F4E /* IFLogging.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = IFLogging.h; sourceTree = "<group>"; };
		079A17361AE7E3A600F22F4E /* DDAbstractDatabaseLogger.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = DDAbstractDatabaseLogger.h; sourceTree = "<group>"; };
		079A17371AE7E3A600F22F4E /* DDAbstractDatabaseLogger.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = DDAbstractDatabaseLogger.m; sourceTree = "<group>"; };
		079A17381AE7E3A600F22F4E /* DDASLLogger.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = DDASLLogger.h; sourceTree = "<group>"; };
		079A17391AE7E3A600F22F4E /* DDASLLogger.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = DDASLLogger.m; sourceTree = "<group>"; };
		079A173A1AE7E3A600F22F4E /* DDFileLogger.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = DDFileLogger.h; sourceTree = "<group>"; };
		079A173B1AE7E3A600F22F4E /* DDFileLogger.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = DDFileLogger.m; sourceTree = "<group>"; };
		079A173C1AE7E3A600F22F4E /* DDLog.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = DDLog.h; sourceTree = "<group>"; };
		079A173D1AE7E3A600F22F4E /* DDLog.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = DDLog.m; sourceTree = "<group>"; };
		079A173E1AE7E3A600F22F4E /* DDTTYLogger.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = DDTTYLogger.h; sourceTree = "<group>"; };
		079A173F1AE7E3A600F22F4E /* DDTTYLogger.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = DDTTYLogger.m; sourceTree = "<group>"; };
		079A17411AE7E3A600F22F4E /* ContextFilterLogFormatter.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = ContextFilterLogFormatter.h; sourceTree = "<group>"; };
		079A17421AE7E3A600F22F4E /* ContextFilterLogFormatter.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = ContextFilterLogFormatter.m; sourceTree = "<group>"; };
		079A17431AE7E3A600F22F4E /* DispatchQueueLogFormatter.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = DispatchQueueLogFormatter.h; sourceTree = "<group>"; };
		079A17441AE7E3A600F22F4E /* DispatchQueueLogFormatter.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = DispatchQueueLogFormatter.m; sourceTree = "<group>"; };
		079A17451AE7E3A600F22F4E /* README.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; path = README.txt; sourceTree = "<group>"; };
		079A17551AE7E5BB00F22F4E /* UIKit.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = UIKit.framework; path = Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS8.3.sdk/System/Library/Frameworks/UIKit.framework; sourceTree = DEVELOPER_DIR; };
		079A17581AE7EA8800F22F4E /* IFService.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = IFService.h; sourceTree = "<group>"; };
		079A175A1AE7EABD00F22F4E /* IFIOCConfigurable.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = IFIOCConfigurable.h; sourceTree = "<group>"; };
		079A175C1AE7EAE400F22F4E /* IFConfigurable.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = IFConfigurable.h; sourceTree = "<group>"; };
		079A175E1AE7EB1B00F22F4E /* IFConfiguration.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = IFConfiguration.h; sourceTree = "<group>"; };
		079A175F1AE7EB1B00F22F4E /* IFConfiguration.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = IFConfiguration.m; sourceTree = "<group>"; };
		079A17621AE7EBAD00F22F4E /* IFValues.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = IFValues.h; sourceTree = "<group>"; };
		079A17641AE7EC8000F22F4E /* UIColor+IF.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = "UIColor+IF.h"; sourceTree = "<group>"; };
		079A17651AE7EC8000F22F4E /* UIColor+IF.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = "UIColor+IF.m"; sourceTree = "<group>"; };
		079A17681AE7EE7600F22F4E /* IFLocals.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = IFLocals.h; sourceTree = "<group>"; };
		079A17691AE7EE7600F22F4E /* IFLocals.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = IFLocals.m; sourceTree = "<group>"; };
		079A176C1AE7F3F800F22F4E /* IFConfiguredLocals.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = IFConfiguredLocals.h; sourceTree = "<group>"; };
		079A176D1AE7F3F800F22F4E /* IFConfiguredLocals.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = IFConfiguredLocals.m; sourceTree = "<group>"; };
		079A17701AE7F80B00F22F4E /* IFContainer.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = IFContainer.h; sourceTree = "<group>"; };
		079A17711AE7F80B00F22F4E /* IFContainer.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = IFContainer.m; sourceTree = "<group>"; };
		079ECCA91AE8441900A3DD41 /* IFTypeInfo.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = IFTypeInfo.h; sourceTree = "<group>"; };
		079ECCAA1AE8441900A3DD41 /* IFTypeInfo.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = IFTypeInfo.m; sourceTree = "<group>"; };
		07D025201AEAC1D200C2A619 /* IFI18nMap.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = IFI18nMap.h; sourceTree = "<group>"; };
		07D025211AEAC1D200C2A619 /* IFI18nMap.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = IFI18nMap.m; sourceTree = "<group>"; };
		07E287F01AEBA7750078B95B /* SemoCore Tests.xctest */ = {isa = PBXFileReference; explicitFileType = wrapper.cfbundle; includeInIndex = 0; path = "SemoCore Tests.xctest"; sourceTree = BUILT_PRODUCTS_DIR; };
		07E287F11AEBA7750078B95B /* XCTest.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = XCTest.framework; path = Library/Frameworks/XCTest.framework; sourceTree = DEVELOPER_DIR; };
		07E287F71AEBA7750078B95B /* SemoCore Tests-Info.plist */ = {isa = PBXFileReference; lastKnownFileType = text.plist.xml; path = "SemoCore Tests-Info.plist"; sourceTree = "<group>"; };
		07E287F91AEBA7750078B95B /* en */ = {isa = PBXFileReference; lastKnownFileType = text.plist.strings; name = en; path = en.lproj/InfoPlist.strings; sourceTree = "<group>"; };
		07E287FB1AEBA7750078B95B /* SemoCore_Tests.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; path = SemoCore_Tests.m; sourceTree = "<group>"; };
		07E287FD1AEBA7750078B95B /* SemoCore Tests-Prefix.pch */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = "SemoCore Tests-Prefix.pch"; sourceTree = "<group>"; };
		07E288031AEBA9080078B95B /* AppContainerTest.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = AppContainerTest.m; sourceTree = "<group>"; };
		07E288051AEBA96A0078B95B /* Thing.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = Thing.h; sourceTree = "<group>"; };
		07E288061AEBA96A0078B95B /* Thing.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = Thing.m; sourceTree = "<group>"; };
		07E288081AEBA98F0078B95B /* Color.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = Color.h; sourceTree = "<group>"; };
		07E288091AEBA98F0078B95B /* Color.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = Color.m; sourceTree = "<group>"; };
		07E2880B1AEBA9CE0078B95B /* Fruit.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = Fruit.h; sourceTree = "<group>"; };
		07E2880C1AEBA9CE0078B95B /* Fruit.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = Fruit.m; sourceTree = "<group>"; };
		07E2880E1AEBA9F60078B95B /* Animal.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = Animal.h; sourceTree = "<group>"; };
		07E2880F1AEBA9F60078B95B /* Animal.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = Animal.m; sourceTree = "<group>"; };
		07E288111AEBAC7F0078B95B /* Plant.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = Plant.h; sourceTree = "<group>"; };
		07E288121AEBAC7F0078B95B /* Plant.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = Plant.m; sourceTree = "<group>"; };
		07E288141AEBAD3C0078B95B /* Forest.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = Forest.h; sourceTree = "<group>"; };
		07E288151AEBAD3C0078B95B /* Forest.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = Forest.m; sourceTree = "<group>"; };
		07E288171AEBADA80078B95B /* Configurable.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = Configurable.h; sourceTree = "<group>"; };
		07E288181AEBADA80078B95B /* Configurable.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = Configurable.m; sourceTree = "<group>"; };
		07E3CFA01BD98D290036722B /* SWRevealViewController.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = SWRevealViewController.h; sourceTree = "<group>"; };
		07E3CFA11BD98D290036722B /* SWRevealViewController.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = SWRevealViewController.m; sourceTree = "<group>"; };
		07E3CFA41BD98D930036722B /* IFSlideViewController.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = IFSlideViewController.h; path = com.innerfunction.semo/IFSlideViewController.h; sourceTree = "<group>"; };
		07E3CFA51BD98D930036722B /* IFSlideViewController.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; name = IFSlideViewController.m; path = com.innerfunction.semo/IFSlideViewController.m; sourceTree = "<group>"; };
		07E3CFA81BD997760036722B /* TODO */ = {isa = PBXFileReference; lastKnownFileType = text; path = TODO; sourceTree = "<group>"; };
		07E3CFA91BDA73C50036722B /* IFProxyTargetContainer.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = IFProxyTargetContainer.h; sourceTree = "<group>"; };
		07E3CFAA1BDA73C50036722B /* IFProxyTargetContainer.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = IFProxyTargetContainer.m; sourceTree = "<group>"; };
		07E3CFB41BDADE550036722B /* IFWebViewController.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = IFWebViewController.h; path = com.innerfunction.semo/IFWebViewController.h; sourceTree = "<group>"; };
		07E3CFB51BDADE550036722B /* IFWebViewController.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; name = IFWebViewController.m; path = com.innerfunction.semo/IFWebViewController.m; sourceTree = "<group>"; };
		07E3CFBB1BDC0A2E0036722B /* IFTableData.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = IFTableData.h; path = com.innerfunction.semo/IFTableData.h; sourceTree = "<group>"; };
		07E3CFBC1BDC0A2E0036722B /* IFTableData.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; name = IFTableData.m; path = com.innerfunction.semo/IFTableData.m; sourceTree = "<group>"; };
		07E3CFBF1BDC11CC0036722B /* IFTableViewCellFactory.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = IFTableViewCellFactory.h; path = com.innerfunction.semo/IFTableViewCellFactory.h; sourceTree = "<group>"; };
		07E3CFC01BDC11CC0036722B /* IFTableViewCellFactory.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; name = IFTableViewCellFactory.m; path = com.innerfunction.semo/IFTableViewCellFactory.m; sourceTree = "<group>"; };
		07E3CFC31BDC15390036722B /* IFTableViewController.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = IFTableViewController.h; path = com.innerfunction.semo/IFTableViewController.h; sourceTree = "<group>"; };
		07E3CFC41BDC15390036722B /* IFTableViewController.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; name = IFTableViewController.m; path = com.innerfunction.semo/IFTableViewController.m; sourceTree = "<group>"; };
		07E3CFC71BDE5A2B0036722B /* IFIOCConfigurationInitable.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = IFIOCConfigurationInitable.h; sourceTree = "<group>"; };
		07E3CFC91BDE5E960036722B /* IFIOCContainerAware.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = IFIOCContainerAware.h; sourceTree = "<group>"; };
		07E3CFCC1BDE6B1F0036722B /* UIView+Toast.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = "UIView+Toast.h"; sourceTree = "<group>"; };
		07E3CFCD1BDE6B1F0036722B /* UIView+Toast.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = "UIView+Toast.m"; sourceTree = "<group>"; };
		07E3CFD01BDE6BF00036722B /* UIViewController+Toast.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = "UIViewController+Toast.h"; path = "com.innerfunction.semo/UIViewController+Toast.h"; sourceTree = "<group>"; };
		07E3CFD11BDE6BF00036722B /* UIViewController+Toast.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; name = "UIViewController+Toast.m"; path = "com.innerfunction.semo/UIViewController+Toast.m"; sourceTree = "<group>"; };
		07E3CFD41BDE6E360036722B /* NSDictionary+IFValues.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = "NSDictionary+IFValues.h"; sourceTree = "<group>"; };
		07E3CFD51BDE6E360036722B /* NSDictionary+IFValues.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = "NSDictionary+IFValues.m"; sourceTree = "<group>"; };
		07E3CFD81BDEC1B20036722B /* UIImage+CropScale.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = "UIImage+CropScale.h"; path = "com.innerfunction.semo/UIImage+CropScale.h"; sourceTree = "<group>"; };
		07E3CFD91BDEC1B20036722B /* UIImage+CropScale.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; name = "UIImage+CropScale.m"; path = "com.innerfunction.semo/UIImage+CropScale.m"; sourceTree = "<group>"; };
		40F4305D2BB1A1E6388AC531 /* Pods.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = Pods.debug.xcconfig; path = "Pods/Target Support Files/Pods/Pods.debug.xcconfig"; sourceTree = "<group>"; };
		43B3ADE948579F28497A3712 /* libPods.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; includeInIndex = 0; path = libPods.a; sourceTree = BUILT_PRODUCTS_DIR; };
		9A09DB48BD2885B33FCC5B03 /* Pods.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = Pods.release.xcconfig; path = "Pods/Target Support Files/Pods/Pods.release.xcconfig"; sourceTree = "<group>"; };
/* End PBXFileReference section */

/* Begin PBXFrameworksBuildPhase section */
		074D9F3A1AE7DD04006D1510 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
				079A17561AE7E5BB00F22F4E /* UIKit.framework in Frameworks */,
				074D9F431AE7DD04006D1510 /* Foundation.framework in Frameworks */,
				DEC9697D045094EC7020060D /* libPods.a in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		07E287ED1AEBA7750078B95B /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
				07E287F21AEBA7750078B95B /* XCTest.framework in Frameworks */,
				07E287F41AEBA7750078B95B /* UIKit.framework in Frameworks */,
				07E287F31AEBA7750078B95B /* Foundation.framework in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXFrameworksBuildPhase section */

/* Begin PBXGroup section */
		048F701713473BDDAE46FE2F /* Pods */ = {
			isa = PBXGroup;
			children = (
				40F4305D2BB1A1E6388AC531 /* Pods.debug.xcconfig */,
				9A09DB48BD2885B33FCC5B03 /* Pods.release.xcconfig */,
			);
			name = Pods;
			sourceTree = "<group>";
		};
		07287ED81BD941E200047B0C /* com.innerfunction.semo.app */ = {
			isa = PBXGroup;
			children = (
				07287EE11BD95EBE00047B0C /* IFDoScheme.h */,
				07287EE21BD95EBE00047B0C /* IFDoScheme.m */,
				07287EE91BD9774B00047B0C /* IFNewScheme.h */,
				07287EEA1BD9774B00047B0C /* IFNewScheme.m */,
				07287EED1BD978AC00047B0C /* IFMakeScheme.h */,
				07287EEE1BD978AC00047B0C /* IFMakeScheme.m */,
				07287EE51BD9768500047B0C /* IFNamedScheme.h */,
				07287EE61BD9768500047B0C /* IFNamedScheme.m */,
				07287EDD1BD948E700047B0C /* IFActionDispatcher.h */,
				07287ED61BD92D2400047B0C /* IFTarget.h */,
				07287EC81BD8F77400047B0C /* IFTargetContainer.h */,
				07E3CFA91BDA73C50036722B /* IFProxyTargetContainer.h */,
				07E3CFAA1BDA73C50036722B /* IFProxyTargetContainer.m */,
				07287ECA1BD8F90C00047B0C /* IFDefaultTargetContainerBehaviour.h */,
				07287ECB1BD8F90C00047B0C /* IFDefaultTargetContainerBehaviour.m */,
				075C6C3E1AE9093F0021DB91 /* IFAppContainer.h */,
				075C6C3F1AE9093F0021DB91 /* IFAppContainer.m */,
				07287ED91BD9424800047B0C /* IFTargetContainerViewController.h */,
				07287EDA1BD9424800047B0C /* IFTargetContainerVIewController.m */,
			);
			name = com.innerfunction.semo.app;
			path = com.innerfunction.semo;
			sourceTree = "<group>";
		};
		07287EF11BD9822C00047B0C /* com.innerfunction.semo.ui */ = {
			isa = PBXGroup;
			children = (
				07E3CFB41BDADE550036722B /* IFWebViewController.h */,
				07E3CFB51BDADE550036722B /* IFWebViewController.m */,
				07287EF21BD9828400047B0C /* IFNavigationViewController.h */,
				07287EF31BD9828400047B0C /* IFNavigationViewController.m */,
				07E3CFA41BD98D930036722B /* IFSlideViewController.h */,
				07E3CFA51BD98D930036722B /* IFSlideViewController.m */,
				07E3CFD01BDE6BF00036722B /* UIViewController+Toast.h */,
				07E3CFD11BDE6BF00036722B /* UIViewController+Toast.m */,
				07E3CFD81BDEC1B20036722B /* UIImage+CropScale.h */,
				07E3CFD91BDEC1B20036722B /* UIImage+CropScale.m */,
			);
			name = com.innerfunction.semo.ui;
			sourceTree = "<group>";
		};
		074D9F341AE7DD04006D1510 = {
			isa = PBXGroup;
			children = (
				074D9F441AE7DD04006D1510 /* SemoCore */,
				07E287F51AEBA7750078B95B /* SemoCore Tests */,
				074D9F411AE7DD04006D1510 /* Frameworks */,
				074D9F401AE7DD04006D1510 /* Products */,
				048F701713473BDDAE46FE2F /* Pods */,
			);
			sourceTree = "<group>";
		};
		074D9F401AE7DD04006D1510 /* Products */ = {
			isa = PBXGroup;
			children = (
				074D9F3F1AE7DD04006D1510 /* libSemoCore.a */,
				07E287F01AEBA7750078B95B /* SemoCore Tests.xctest */,
			);
			name = Products;
			sourceTree = "<group>";
		};
		074D9F411AE7DD04006D1510 /* Frameworks */ = {
			isa = PBXGroup;
			children = (
				079A17551AE7E5BB00F22F4E /* UIKit.framework */,
				074D9F421AE7DD04006D1510 /* Foundation.framework */,
				07E287F11AEBA7750078B95B /* XCTest.framework */,
				43B3ADE948579F28497A3712 /* libPods.a */,
			);
			name = Frameworks;
			sourceTree = "<group>";
		};
		074D9F441AE7DD04006D1510 /* SemoCore */ = {
			isa = PBXGroup;
			children = (
				07E3CFA81BD997760036722B /* TODO */,
				07E3CFBA1BDC09F00036722B /* com.innerfunction.semo.ui.table */,
				07287EF11BD9822C00047B0C /* com.innerfunction.semo.ui */,
				07287ED81BD941E200047B0C /* com.innerfunction.semo.app */,
				079A17571AE7EA5C00F22F4E /* com.innerfunction.semo */,
				079A168A1AE7DDE800F22F4E /* com.innerfunction.uri */,
				079A169B1AE7DDE800F22F4E /* com.innerfunction.util */,
				079A16E61AE7DF2D00F22F4E /* Externals */,
				074D9F471AE7DD04006D1510 /* SemoCore-Prefix.pch */,
				074D9F491AE7DD04006D1510 /* SemoCore-Info.plist */,
				074D9F4B1AE7DD04006D1510 /* SemoCore.h */,
				074D9F4D1AE7DD04006D1510 /* SemoCore.m */,
				074D9F451AE7DD04006D1510 /* Supporting Files */,
			);
			path = SemoCore;
			sourceTree = "<group>";
		};
		074D9F451AE7DD04006D1510 /* Supporting Files */ = {
			isa = PBXGroup;
			children = (
				074D9F461AE7DD04006D1510 /* Info.plist */,
			);
			name = "Supporting Files";
			sourceTree = "<group>";
		};
		079A168A1AE7DDE800F22F4E /* com.innerfunction.uri */ = {
			isa = PBXGroup;
			children = (
				079A168B1AE7DDE800F22F4E /* IFCompoundURI.h */,
				079A168C1AE7DDE800F22F4E /* IFCompoundURI.m */,
				079A168D1AE7DDE800F22F4E /* IFFileBasedSchemeHandler.h */,
				079A168E1AE7DDE800F22F4E /* IFFileBasedSchemeHandler.m */,
				079A168F1AE7DDE800F22F4E /* IFFileResource.h */,
				079A16901AE7DDE800F22F4E /* IFFileResource.m */,
				079A16911AE7DDE800F22F4E /* IFLocalSchemeHandler.h */,
				079A16921AE7DDE800F22F4E /* IFLocalSchemeHandler.m */,
				079A16931AE7DDE800F22F4E /* IFResource.h */,
				079A16941AE7DDE800F22F4E /* IFResource.m */,
				079A16961AE7DDE800F22F4E /* IFSchemeHandler.h */,
				079A16971AE7DDE800F22F4E /* IFStringSchemeHandler.h */,
				079A16981AE7DDE800F22F4E /* IFStringSchemeHandler.m */,
				079A16991AE7DDE800F22F4E /* IFURIResolver.h */,
				079A169A1AE7DDE800F22F4E /* IFURIResolver.m */,
			);
			path = com.innerfunction.uri;
			sourceTree = "<group>";
		};
		079A169B1AE7DDE800F22F4E /* com.innerfunction.util */ = {
			isa = PBXGroup;
			children = (
				07D025201AEAC1D200C2A619 /* IFI18nMap.h */,
				07D025211AEAC1D200C2A619 /* IFI18nMap.m */,
				079A17341AE7E34100F22F4E /* IFLogging.h */,
				079A169E1AE7DDE800F22F4E /* IFFileIO.h */,
				079A169F1AE7DDE800F22F4E /* IFFileIO.m */,
				079A16A01AE7DDE800F22F4E /* IFHTTPUtils.h */,
				079A16A11AE7DDE800F22F4E /* IFHTTPUtils.m */,
				079A16A21AE7DDE800F22F4E /* IFJSONData.h */,
				079A16A31AE7DDE800F22F4E /* IFJSONData.m */,
				079A16A41AE7DDE800F22F4E /* IFRegExp.h */,
				079A16A51AE7DDE800F22F4E /* IFRegExp.m */,
				079A16A61AE7DDE800F22F4E /* IFStringTemplate.h */,
				079A16A71AE7DDE800F22F4E /* IFStringTemplate.m */,
				079A16AA1AE7DDE800F22F4E /* IFTypeConversions.h */,
				079A16AB1AE7DDE800F22F4E /* IFTypeConversions.m */,
				079A17681AE7EE7600F22F4E /* IFLocals.h */,
				079A17691AE7EE7600F22F4E /* IFLocals.m */,
				079ECCA91AE8441900A3DD41 /* IFTypeInfo.h */,
				079ECCAA1AE8441900A3DD41 /* IFTypeInfo.m */,
				079A16AE1AE7DDE800F22F4E /* NSArray+IF.h */,
				079A16AF1AE7DDE800F22F4E /* NSArray+IF.m */,
				079A16B01AE7DDE800F22F4E /* NSDictionary+IF.h */,
				079A16B11AE7DDE800F22F4E /* NSDictionary+IF.m */,
				079A16B21AE7DDE800F22F4E /* NSString+IF.h */,
				079A16B31AE7DDE800F22F4E /* NSString+IF.m */,
				079A17641AE7EC8000F22F4E /* UIColor+IF.h */,
				079A17651AE7EC8000F22F4E /* UIColor+IF.m */,
			);
			path = com.innerfunction.util;
			sourceTree = "<group>";
		};
		079A16E61AE7DF2D00F22F4E /* Externals */ = {
			isa = PBXGroup;
			children = (
				07E3CFCB1BDE6B1F0036722B /* Toast */,
				07E3CF9F1BD98D290036722B /* SWRevealViewController */,
				079A17351AE7E3A600F22F4E /* CocoaLumberjack */,
				079A172F1AE7E15D00F22F4E /* ISO8601DateFormatter */,
				079A16E71AE7DF2D00F22F4E /* JSONKit */,
				079A17001AE7DF2D00F22F4E /* ZipArchive */,
			);
			path = Externals;
			sourceTree = "<group>";
		};
		079A16E71AE7DF2D00F22F4E /* JSONKit */ = {
			isa = PBXGroup;
			children = (
				079A16E81AE7DF2D00F22F4E /* JSONKit.h */,
				079A16E91AE7DF2D00F22F4E /* JSONKit.m */,
			);
			path = JSONKit;
			sourceTree = "<group>";
		};
		079A17001AE7DF2D00F22F4E /* ZipArchive */ = {
			isa = PBXGroup;
			children = (
				079A17011AE7DF2D00F22F4E /* minizip */,
				079A170B1AE7DF2D00F22F4E /* ZipArchive.h */,
				079A170C1AE7DF2D00F22F4E /* ZipArchive.mm */,
			);
			path = ZipArchive;
			sourceTree = "<group>";
		};
		079A17011AE7DF2D00F22F4E /* minizip */ = {
			isa = PBXGroup;
			children = (
				079A17021AE7DF2D00F22F4E /* crypt.h */,
				079A17031AE7DF2D00F22F4E /* ioapi.c */,
				079A17041AE7DF2D00F22F4E /* ioapi.h */,
				079A17051AE7DF2D00F22F4E /* mztools.c */,
				079A17061AE7DF2D00F22F4E /* mztools.h */,
				079A17071AE7DF2D00F22F4E /* unzip.c */,
				079A17081AE7DF2D00F22F4E /* unzip.h */,
				079A17091AE7DF2D00F22F4E /* zip.c */,
				079A170A1AE7DF2D00F22F4E /* zip.h */,
			);
			path = minizip;
			sourceTree = "<group>";
		};
		079A172F1AE7E15D00F22F4E /* ISO8601DateFormatter */ = {
			isa = PBXGroup;
			children = (
				079A17301AE7E15D00F22F4E /* ISO8601DateFormatter.h */,
				079A17311AE7E15D00F22F4E /* ISO8601DateFormatter.m */,
			);
			path = ISO8601DateFormatter;
			sourceTree = "<group>";
		};
		079A17351AE7E3A600F22F4E /* CocoaLumberjack */ = {
			isa = PBXGroup;
			children = (
				079A17361AE7E3A600F22F4E /* DDAbstractDatabaseLogger.h */,
				079A17371AE7E3A600F22F4E /* DDAbstractDatabaseLogger.m */,
				079A17381AE7E3A600F22F4E /* DDASLLogger.h */,
				079A17391AE7E3A600F22F4E /* DDASLLogger.m */,
				079A173A1AE7E3A600F22F4E /* DDFileLogger.h */,
				079A173B1AE7E3A600F22F4E /* DDFileLogger.m */,
				079A173C1AE7E3A600F22F4E /* DDLog.h */,
				079A173D1AE7E3A600F22F4E /* DDLog.m */,
				079A173E1AE7E3A600F22F4E /* DDTTYLogger.h */,
				079A173F1AE7E3A600F22F4E /* DDTTYLogger.m */,
				079A17401AE7E3A600F22F4E /* Extensions */,
			);
			path = CocoaLumberjack;
			sourceTree = "<group>";
		};
		079A17401AE7E3A600F22F4E /* Extensions */ = {
			isa = PBXGroup;
			children = (
				079A17411AE7E3A600F22F4E /* ContextFilterLogFormatter.h */,
				079A17421AE7E3A600F22F4E /* ContextFilterLogFormatter.m */,
				079A17431AE7E3A600F22F4E /* DispatchQueueLogFormatter.h */,
				079A17441AE7E3A600F22F4E /* DispatchQueueLogFormatter.m */,
				079A17451AE7E3A600F22F4E /* README.txt */,
			);
			path = Extensions;
			sourceTree = "<group>";
		};
		079A17571AE7EA5C00F22F4E /* com.innerfunction.semo */ = {
			isa = PBXGroup;
			children = (
				079A17621AE7EBAD00F22F4E /* IFValues.h */,
				079A175E1AE7EB1B00F22F4E /* IFConfiguration.h */,
				079A175F1AE7EB1B00F22F4E /* IFConfiguration.m */,
				079A17581AE7EA8800F22F4E /* IFService.h */,
				079A175A1AE7EABD00F22F4E /* IFIOCConfigurable.h */,
				075A31351AE9817300FC8615 /* IFIOCTypeInspectable.h */,
				07E3CFC71BDE5A2B0036722B /* IFIOCConfigurationInitable.h */,
				07E3CFC91BDE5E960036722B /* IFIOCContainerAware.h */,
				079A175C1AE7EAE400F22F4E /* IFConfigurable.h */,
				079A176C1AE7F3F800F22F4E /* IFConfiguredLocals.h */,
				079A176D1AE7F3F800F22F4E /* IFConfiguredLocals.m */,
				079A17701AE7F80B00F22F4E /* IFContainer.h */,
				079A17711AE7F80B00F22F4E /* IFContainer.m */,
				07287ECE1BD8FF7F00047B0C /* IFStringRewriteRules.h */,
				07287ECF1BD8FF7F00047B0C /* IFStringRewriteRules.m */,
				07E3CFD41BDE6E360036722B /* NSDictionary+IFValues.h */,
				07E3CFD51BDE6E360036722B /* NSDictionary+IFValues.m */,
			);
			path = com.innerfunction.semo;
			sourceTree = "<group>";
		};
		07E287F51AEBA7750078B95B /* SemoCore Tests */ = {
			isa = PBXGroup;
			children = (
				07E287FB1AEBA7750078B95B /* SemoCore_Tests.m */,
				07E287F61AEBA7750078B95B /* Supporting Files */,
				07E288031AEBA9080078B95B /* AppContainerTest.m */,
				07E288051AEBA96A0078B95B /* Thing.h */,
				07E288061AEBA96A0078B95B /* Thing.m */,
				07E288081AEBA98F0078B95B /* Color.h */,
				07E288091AEBA98F0078B95B /* Color.m */,
				07E2880B1AEBA9CE0078B95B /* Fruit.h */,
				07E2880C1AEBA9CE0078B95B /* Fruit.m */,
				07E2880E1AEBA9F60078B95B /* Animal.h */,
				07E2880F1AEBA9F60078B95B /* Animal.m */,
				07E288111AEBAC7F0078B95B /* Plant.h */,
				07E288121AEBAC7F0078B95B /* Plant.m */,
				07E288141AEBAD3C0078B95B /* Forest.h */,
				07E288151AEBAD3C0078B95B /* Forest.m */,
				07E288171AEBADA80078B95B /* Configurable.h */,
				07E288181AEBADA80078B95B /* Configurable.m */,
				072D65371AEBFAF9009BC9A4 /* IOCConfigurable.h */,
				072D65381AEBFAF9009BC9A4 /* IOCConfigurable.m */,
			);
			path = "SemoCore Tests";
			sourceTree = "<group>";
		};
		07E287F61AEBA7750078B95B /* Supporting Files */ = {
			isa = PBXGroup;
			children = (
				070F6DE31AEC0A6500533CC1 /* types.json */,
				070F6DE11AEC0A4700533CC1 /* configuration.json */,
				07E287F71AEBA7750078B95B /* SemoCore Tests-Info.plist */,
				07E287F81AEBA7750078B95B /* InfoPlist.strings */,
				07E287FD1AEBA7750078B95B /* SemoCore Tests-Prefix.pch */,
			);
			name = "Supporting Files";
			sourceTree = "<group>";
		};
		07E3CF9F1BD98D290036722B /* SWRevealViewController */ = {
			isa = PBXGroup;
			children = (
				07E3CFA01BD98D290036722B /* SWRevealViewController.h */,
				07E3CFA11BD98D290036722B /* SWRevealViewController.m */,
			);
			path = SWRevealViewController;
			sourceTree = "<group>";
		};
		07E3CFBA1BDC09F00036722B /* com.innerfunction.semo.ui.table */ = {
			isa = PBXGroup;
			children = (
				07E3CFBB1BDC0A2E0036722B /* IFTableData.h */,
				07E3CFBC1BDC0A2E0036722B /* IFTableData.m */,
				07E3CFBF1BDC11CC0036722B /* IFTableViewCellFactory.h */,
				07E3CFC01BDC11CC0036722B /* IFTableViewCellFactory.m */,
				07E3CFC31BDC15390036722B /* IFTableViewController.h */,
				07E3CFC41BDC15390036722B /* IFTableViewController.m */,
			);
			name = com.innerfunction.semo.ui.table;
			sourceTree = "<group>";
		};
		07E3CFCB1BDE6B1F0036722B /* Toast */ = {
			isa = PBXGroup;
			children = (
				07E3CFCC1BDE6B1F0036722B /* UIView+Toast.h */,
				07E3CFCD1BDE6B1F0036722B /* UIView+Toast.m */,
			);
			path = Toast;
			sourceTree = "<group>";
		};
/* End PBXGroup section */

/* Begin PBXHeadersBuildPhase section */
		074D9F3B1AE7DD04006D1510 /* Headers */ = {
			isa = PBXHeadersBuildPhase;
			buildActionMask = 2147483647;
			files = (
				079A16CA1AE7DDE800F22F4E /* IFFileIO.h in Headers */,
				079A16C41AE7DDE800F22F4E /* IFStringSchemeHandler.h in Headers */,
				07287ED71BD92D2400047B0C /* IFTarget.h in Headers */,
				079A16BC1AE7DDE800F22F4E /* IFFileResource.h in Headers */,
				079A16D61AE7DDE800F22F4E /* IFTypeConversions.h in Headers */,
				07E3CFCE1BDE6B1F0036722B /* UIView+Toast.h in Headers */,
				079A17521AE7E3A600F22F4E /* DispatchQueueLogFormatter.h in Headers */,
				079A17591AE7EA8800F22F4E /* IFService.h in Headers */,
				07287EDE1BD948E700047B0C /* IFActionDispatcher.h in Headers */,
				079A16DA1AE7DDE800F22F4E /* NSArray+IF.h in Headers */,
				079A16D21AE7DDE800F22F4E /* IFStringTemplate.h in Headers */,
				07287EEB1BD9774B00047B0C /* IFNewScheme.h in Headers */,
				079A17661AE7EC8000F22F4E /* UIColor+IF.h in Headers */,
				07287EC91BD8F77400047B0C /* IFTargetContainer.h in Headers */,
				079A16BE1AE7DDE800F22F4E /* IFLocalSchemeHandler.h in Headers */,
				079A17241AE7DF2D00F22F4E /* crypt.h in Headers */,
				07E3CFC11BDC11CC0036722B /* IFTableViewCellFactory.h in Headers */,
				07E3CFDA1BDEC1B20036722B /* UIImage+CropScale.h in Headers */,
				07D025221AEAC1D200C2A619 /* IFI18nMap.h in Headers */,
				079A174C1AE7E3A600F22F4E /* DDLog.h in Headers */,
				079A17721AE7F80B00F22F4E /* IFContainer.h in Headers */,
				079A16CE1AE7DDE800F22F4E /* IFJSONData.h in Headers */,
				079ECCAB1AE8441900A3DD41 /* IFTypeInfo.h in Headers */,
				079A172A1AE7DF2D00F22F4E /* unzip.h in Headers */,
				07E3CFCA1BDE5E960036722B /* IFIOCContainerAware.h in Headers */,
				079A16B81AE7DDE800F22F4E /* IFCompoundURI.h in Headers */,
				07E3CFD61BDE6E360036722B /* NSDictionary+IFValues.h in Headers */,
				07287EEF1BD978AC00047B0C /* IFMakeScheme.h in Headers */,
				079A174A1AE7E3A600F22F4E /* DDFileLogger.h in Headers */,
				079A17261AE7DF2D00F22F4E /* ioapi.h in Headers */,
				079A172D1AE7DF2D00F22F4E /* ZipArchive.h in Headers */,
				079A16C01AE7DDE800F22F4E /* IFResource.h in Headers */,
				079A17321AE7E15D00F22F4E /* ISO8601DateFormatter.h in Headers */,
				079A16BA1AE7DDE800F22F4E /* IFFileBasedSchemeHandler.h in Headers */,
				07E3CFAB1BDA73C50036722B /* IFProxyTargetContainer.h in Headers */,
				079A170D1AE7DF2D00F22F4E /* JSONKit.h in Headers */,
				07287EF41BD9828400047B0C /* IFNavigationViewController.h in Headers */,
				079A16D01AE7DDE800F22F4E /* IFRegExp.h in Headers */,
				079A17461AE7E3A600F22F4E /* DDAbstractDatabaseLogger.h in Headers */,
				07E3CFC51BDC15390036722B /* IFTableViewController.h in Headers */,
				079A16CC1AE7DDE800F22F4E /* IFHTTPUtils.h in Headers */,
				07E3CFBD1BDC0A2F0036722B /* IFTableData.h in Headers */,
				07E3CFA21BD98D290036722B /* SWRevealViewController.h in Headers */,
				079A175B1AE7EABD00F22F4E /* IFIOCConfigurable.h in Headers */,
				07E3CFC81BDE5A2B0036722B /* IFIOCConfigurationInitable.h in Headers */,
				079A175D1AE7EAE400F22F4E /* IFConfigurable.h in Headers */,
				079A172C1AE7DF2D00F22F4E /* zip.h in Headers */,
				074D9F481AE7DD04006D1510 /* SemoCore-Prefix.pch in Headers */,
				079A17601AE7EB1B00F22F4E /* IFConfiguration.h in Headers */,
				07287ECC1BD8F90C00047B0C /* IFDefaultTargetContainerBehaviour.h in Headers */,
				079A174E1AE7E3A600F22F4E /* DDTTYLogger.h in Headers */,
				079A16DE1AE7DDE800F22F4E /* NSString+IF.h in Headers */,
				079A16DC1AE7DDE800F22F4E /* NSDictionary+IF.h in Headers */,
				07E3CFB61BDADE550036722B /* IFWebViewController.h in Headers */,
				079A17481AE7E3A600F22F4E /* DDASLLogger.h in Headers */,
				079A176A1AE7EE7600F22F4E /* IFLocals.h in Headers */,
				07287ED01BD8FF7F00047B0C /* IFStringRewriteRules.h in Headers */,
				07287EE31BD95EBE00047B0C /* IFDoScheme.h in Headers */,
				07E3CFA61BD98D930036722B /* IFSlideViewController.h in Headers */,
				07287EE71BD9768500047B0C /* IFNamedScheme.h in Headers */,
				079A16C31AE7DDE800F22F4E /* IFSchemeHandler.h in Headers */,
				079A16C61AE7DDE800F22F4E /* IFURIResolver.h in Headers */,
				07287EDB1BD9424800047B0C /* IFTargetContainerViewController.h in Headers */,
				07E3CFD21BDE6BF00036722B /* UIViewController+Toast.h in Headers */,
				079A17281AE7DF2D00F22F4E /* mztools.h in Headers */,
				079A17501AE7E3A600F22F4E /* ContextFilterLogFormatter.h in Headers */,
				074D9F4C1AE7DD04006D1510 /* SemoCore.h in Headers */,
				079A176E1AE7F3F800F22F4E /* IFConfiguredLocals.h in Headers */,
				079A17631AE7EBAD00F22F4E /* IFValues.h in Headers */,
				075C6C401AE9093F0021DB91 /* IFAppContainer.h in Headers */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXHeadersBuildPhase section */

/* Begin PBXNativeTarget section */
		074D9F3E1AE7DD04006D1510 /* SemoCore */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 074D9F511AE7DD04006D1510 /* Build configuration list for PBXNativeTarget "SemoCore" */;
			buildPhases = (
				453EA95326FB780D6ED52F5A /* Check Pods Manifest.lock */,
				074D9F391AE7DD04006D1510 /* Sources */,
				074D9F3A1AE7DD04006D1510 /* Frameworks */,
				074D9F3B1AE7DD04006D1510 /* Headers */,
				074D9F3C1AE7DD04006D1510 /* Resources */,
				074D9F3D1AE7DD04006D1510 /* ShellScript */,
				A6BF14B5F021A4B4437808CD /* Copy Pods Resources */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = SemoCore;
			productName = SemoCore;
			productReference = 074D9F3F1AE7DD04006D1510 /* libSemoCore.a */;
			productType = "com.apple.product-type.library.static";
		};
		07E287EF1AEBA7750078B95B /* SemoCore Tests */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 07E288021AEBA7750078B95B /* Build configuration list for PBXNativeTarget "SemoCore Tests" */;
			buildPhases = (
				07E287EC1AEBA7750078B95B /* Sources */,
				07E287ED1AEBA7750078B95B /* Frameworks */,
				07E287EE1AEBA7750078B95B /* Resources */,
			);
			buildRules = (
			);
			dependencies = (
				07E287FF1AEBA7750078B95B /* PBXTargetDependency */,
			);
			name = "SemoCore Tests";
			productName = "SemoCore Tests";
			productReference = 07E287F01AEBA7750078B95B /* SemoCore Tests.xctest */;
			productType = "com.apple.product-type.bundle.unit-test";
		};
/* End PBXNativeTarget section */

/* Begin PBXProject section */
		074D9F351AE7DD04006D1510 /* Project object */ = {
			isa = PBXProject;
			attributes = {
				LastUpgradeCheck = 0700;
				ORGANIZATIONNAME = InnerFunction;
				TargetAttributes = {
					074D9F3E1AE7DD04006D1510 = {
						CreatedOnToolsVersion = 6.3;
					};
					07E287EF1AEBA7750078B95B = {
						TestTargetID = 074D9F3E1AE7DD04006D1510;
					};
				};
			};
			buildConfigurationList = 074D9F381AE7DD04006D1510 /* Build configuration list for PBXProject "SemoCore" */;
			compatibilityVersion = "Xcode 3.2";
			developmentRegion = English;
			hasScannedForEncodings = 0;
			knownRegions = (
				en,
			);
			mainGroup = 074D9F341AE7DD04006D1510;
			productRefGroup = 074D9F401AE7DD04006D1510 /* Products */;
			projectDirPath = "";
			projectRoot = "";
			targets = (
				074D9F3E1AE7DD04006D1510 /* SemoCore */,
				07E287EF1AEBA7750078B95B /* SemoCore Tests */,
			);
		};
/* End PBXProject section */

/* Begin PBXResourcesBuildPhase section */
		074D9F3C1AE7DD04006D1510 /* Resources */ = {
			isa = PBXResourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				079A17541AE7E3A600F22F4E /* README.txt in Resources */,
				074D9F4A1AE7DD04006D1510 /* SemoCore-Info.plist in Resources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		07E287EE1AEBA7750078B95B /* Resources */ = {
			isa = PBXResourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				070F6DE21AEC0A4700533CC1 /* configuration.json in Resources */,
				07E287FA1AEBA7750078B95B /* InfoPlist.strings in Resources */,
				070F6DE41AEC0A6500533CC1 /* types.json in Resources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXResourcesBuildPhase section */

/* Begin PBXShellScriptBuildPhase section */
		074D9F3D1AE7DD04006D1510 /* ShellScript */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 8;
			files = (
			);
			inputPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 1;
			shellPath = /usr/bin/python;
			shellScript = "# TAG: BUILD SCRIPT (do not remove this comment)\n# Build script generated using https://github.com/kstenerud/iOS-Universal-Framework Mk 8 (beta 2012-06-16)\nimport logging\n\n\n##############################################################################\n#\n# Configuration\n#\n##############################################################################\n\n# Select which kind of framework to build.\n#\n# Note: Due to issues with Xcode's build process, if you select\n#       'embeddedframework', it will still show the regular framework\n#       (as a symlink) along side of the embedded framework. Be sure to\n#       instruct your users to copy/move the embedded framework in this case!\n#\n# If your framework contains resources such as images, nibs, momds, plists,\n# zipfiles and such, choose 'embeddedframework'.\n#\n# If your framework contains no resources, choose 'framework'.\n#\nconfig_framework_type = 'framework'\n#config_framework_type = 'embeddedframework'\n\n# Open the build directory in Finder when the universal framework is\n# successfully built.\n#\n# This value can be overridden by setting the UFW_OPEN_BUILD_DIR env variable\n# to True or False.\n#\n# Recommended setting: True\n#\nconfig_open_build_dir = True\n\n# If true, ensures that all public headers are stored in the framework under\n# the same directory hierarchy as they were in the source tree.\n#\n# Xcode by default places all headers at the same top level, but every other\n# build tool in the known universe preserves directory structure. For simple\n# libraries it doesn't really matter much, but for ports of existing software\n# packages or for bigger libraries, it makes sense to have more structure.\n#\n# The default is set to \"False\" since that's what most Xcode users are used to.\n#\n# Recommended setting: True for deep hierarchy projects, False otherwise.\n#\nconfig_deep_header_hierarchy = False\n\n# Specify where the top of the public header hierarchy is. This path is\n# relative to the project's dir (PROJECT_DIR). You can reference environment\n# variables using templating syntax (e.g. \"${TARGET_NAME}/Some/Subdir\")\n#\n# NOTE: Only used if config_deep_header_hierarchy is True.\n#\n# If this is set to None, the script will attempt to figure out for itself\n# where the top of the header hierarchy is by looking for common path prefixes\n# in the public header files. This process can fail if:\n# - You only have one public header file.\n# - Your source header files don't all have a common root.\n#\n# A common approach is to use \"${TARGET_NAME}\", working under the assumption\n# that all of your header files share the common root of a directory under\n# your project with the same name as your target (which is the Xcode default).\n#\n# Recommended setting: \"${TARGET_NAME}\"\n#\nconfig_deep_header_top = \"${TARGET_NAME}\"\n\n# Warn when \"DerivedData\" is detected in any of the header, library, or\n# framework search paths. In almost all cases, references to directories under\n# DerivedData are added as a result of an Xcode bug and must be manually\n# removed.\n#\n# Recommended setting: True\n#\nconfig_warn_derived_data = True\n\n# Warn if no headers were marked public in this framework.\n#\n# Recommended setting: True\n#\nconfig_warn_no_public_headers = True\n\n# Cause the build to fail if any warnings are issued.\n#\n# Recommended setting: True\n#\nconfig_fail_on_warnings = True\n\n# Minimum log level\n#\n# Recommended setting: logging.INFO\n#\nconfig_log_level = logging.INFO\n\n\n##############################################################################\n#\n# Don't touch anything below here unless you know what you're doing.\n#\n##############################################################################\n\nimport collections\nimport json\nimport os\nimport re\nimport shlex\nimport shutil\nimport string\nimport subprocess\nimport sys\nimport time\nimport traceback\n\n\n##############################################################################\n#\n# Globals\n#\n##############################################################################\n\nlog = logging.getLogger('UFW')\n\nissued_warnings = False\n\n\n##############################################################################\n#\n# Classes\n#\n##############################################################################\n\n# Allows the slave build to communicate with the master build.\n#\nclass BuildState:\n\n    def __init__(self):\n        self.reload()\n\n    def reset(self):\n        self.slave_platform = None\n        self.slave_architectures = []\n        self.slave_linked_archive_paths = []\n        self.slave_built_fw_path = None\n        self.slave_built_embedded_fw_path = None\n\n    def set_slave_properties(self, architectures,\n                             linked_archive_paths,\n                             built_fw_path,\n                             built_embedded_fw_path):\n        self.slave_platform = os.environ['PLATFORM_NAME']\n        self.slave_architectures = architectures\n        self.slave_linked_archive_paths = linked_archive_paths\n        self.slave_built_fw_path = built_fw_path\n        self.slave_built_embedded_fw_path = built_embedded_fw_path\n\n    def get_save_path(self):\n        return os.path.join(os.environ['PROJECT_TEMP_DIR'], \"ufw_build_state.json\")\n\n    def persist(self):\n        filename = self.get_save_path()\n        parent = os.path.dirname(filename)\n        if not os.path.isdir(parent):\n            os.makedirs(parent)\n        with open(filename, \"w\") as f:\n            f.write(json.dumps(self.__dict__))\n\n    def reload(self):\n        self.reset()\n        filename = self.get_save_path()\n        if os.path.exists(filename):\n            with open(filename, \"r\") as f:\n                new_dict = json.loads(f.read())\n                if new_dict is not None:\n                    self.__dict__ = dict(self.__dict__.items() + new_dict.items())\n\n\n# Holds information about the current project and build environment.\n#\nclass Project:\n\n    def __init__(self, filename):\n        sourcecode_types = ['sourcecode.c.c',\n                            'sourcecode.c.objc',\n                            'sourcecode.cpp.cpp',\n                            'sourcecode.cpp.objcpp',\n                            'sourcecode.asm.asm',\n                            'sourcecode.asm.llvm',\n                            'sourcecode.nasm']\n\n        self.build_state = BuildState()\n        self.project_data = self.load_from_file(filename)\n        self.target = filter(lambda x: x['name'] == os.environ['TARGET_NAME'], self.project_data['targets'])[0]\n        self.public_headers = self.get_build_phase_files('PBXHeadersBuildPhase', lambda x: x.get('settings', False) and x['settings'].get('ATTRIBUTES', False) and 'Public' in x['settings']['ATTRIBUTES'])\n        self.static_libraries = self.get_build_phase_files('PBXFrameworksBuildPhase', lambda x: x['fileRef']['fileType'] == 'archive.ar' and x['fileRef']['sourceTree'] not in ['DEVELOPER_DIR', 'SDKROOT'])\n        self.static_frameworks = self.get_build_phase_files('PBXFrameworksBuildPhase', lambda x: x['fileRef']['fileType'] == 'wrapper.framework' and x['fileRef']['sourceTree'] not in ['DEVELOPER_DIR', 'SDKROOT'])\n        self.compilable_sources = self.get_build_phase_files('PBXSourcesBuildPhase', lambda x: x['fileRef']['fileType'] in sourcecode_types)\n        self.header_paths = [os.path.join(*x['pathComponents']) for x in self.public_headers]\n\n        self.headers_dir = os.path.join(os.environ['TARGET_BUILD_DIR'], os.environ['CONTENTS_FOLDER_PATH'], 'Headers')\n        self.libtool_path = os.path.join(os.environ['DT_TOOLCHAIN_DIR'], 'usr', 'bin', 'libtool')\n        self.project_filename = os.path.join(os.environ['PROJECT_FILE_PATH'], \"project.pbxproj\")\n        self.local_exe_path = os.path.join(os.environ['TARGET_BUILD_DIR'], os.environ['EXECUTABLE_PATH'])\n        self.local_architectures = os.environ['ARCHS'].split(' ')\n        self.local_built_fw_path = os.path.join(os.environ['TARGET_BUILD_DIR'], os.environ['WRAPPER_NAME'])\n        self.local_built_embedded_fw_path = os.path.splitext(self.local_built_fw_path)[0] + \".embeddedframework\"\n        self.local_linked_archive_paths = [self.get_linked_ufw_archive_path(arch) for arch in self.local_architectures]\n        self.local_platform = os.environ['PLATFORM_NAME']\n        other_platforms = os.environ['SUPPORTED_PLATFORMS'].split(' ')\n        other_platforms.remove(self.local_platform)\n        self.other_platform = other_platforms[0]\n\n        sdk_name = os.environ['SDK_NAME']\n        if not sdk_name.startswith(self.local_platform):\n            raise Exception(\"%s didn't start with %s\" % (sdk_name, self.local_platform))\n        self.sdk_version = sdk_name[len(self.local_platform):]\n\n    # Load an Xcode project file.\n    #\n    def load_from_file(self, filename):\n        project_file = json.loads(subprocess.check_output([\"plutil\", \"-convert\", \"json\", \"-o\", \"-\", filename]))\n        all_objects = project_file['objects']\n        del project_file['objects']\n        for obj in all_objects.values():\n            self.fix_keys(obj)\n        self.unpack_objects(self.build_dereference_list(all_objects, None, None, project_file))\n        self.unpack_objects(self.build_dereference_list(all_objects, None, None, all_objects.values()))\n        project_data = project_file['rootObject']\n        self.build_full_paths(project_data, splitpath(os.environ['SOURCE_ROOT']))\n        return project_data\n\n    def is_key(self, obj):        \n        return isinstance(obj, basestring) and len(obj) == 24 and re.search('^[0-9a-fA-F]+$', obj) is not None\n    \n    def build_dereference_list(self, all_objects, parent, key, obj):\n        deref_list = []\n        if self.is_key(obj):\n            dereferenced = all_objects.get(obj, obj)\n            if dereferenced is not obj:\n                deref_list.append((parent, key, obj, dereferenced))\n        elif isinstance(obj, collections.Mapping):\n            for k, v in obj.iteritems():\n                deref_list += self.build_dereference_list(all_objects, obj, k, v)\n        elif isinstance(obj, collections.Iterable) and not isinstance(obj, basestring):\n            for item in obj:\n                deref_list += self.build_dereference_list(all_objects, obj, None, item)\n        return deref_list\n    \n    def unpack_objects(self, deref_list):\n        for parent, key, orig, obj in deref_list:\n            if key is None:\n                parent.remove(orig)\n                parent.append(obj)\n            else:\n                parent[key] = obj\n\n    # Store the full path, separated into components, to a node inside the node\n    # as \"pathComponents\". Also recurse into that node if it's a group.\n    #\n    def build_full_paths(self, node, base_path):\n        # Some nodes are relative to a different source tree, specified as an\n        # env variable.\n        if node.get('sourceTree', '<group>') != '<group>':\n            new_base_path = os.environ.get(node['sourceTree'], None)\n            if new_base_path:\n                base_path = splitpath(new_base_path)\n        # Add the current node's path, if any.\n        if node.get('path', False):\n            base_path = base_path + splitpath(node['path'])\n        node['pathComponents'] = base_path\n        # Recurse if this is a group.\n        if node['isa'] == 'PBXGroup':\n            for child in node['children']:\n                self.build_full_paths(child, base_path)\n        elif node['isa'] == 'PBXProject':\n            self.build_full_paths(node['mainGroup'], base_path)\n            self.build_full_paths(node['productRefGroup'], base_path)\n            for child in node['targets']:\n                self.build_full_paths(child, base_path)\n            projectRefs = node.get('projectReferences', None)\n            if projectRefs is not None:\n                for child in projectRefs[0].values():\n                    self.build_full_paths(child, base_path)\n\n    # Fix up any inconvenient keys.\n    #\n    def fix_keys(self, obj):\n        key_remappings = {'lastKnownFileType': 'fileType', 'explicitFileType': 'fileType'}\n        for key in list(set(key_remappings.keys()) & set(obj.keys())):\n            obj[key_remappings[key]] = obj[key]\n            del obj[key]\n\n    # Get the files from a build phase.\n    #\n    def get_build_phase_files(self, build_phase_name, filter_func):\n        build_phase = filter(lambda x: x['isa'] == build_phase_name, self.target['buildPhases'])[0]\n        build_files = filter(filter_func, build_phase['files'])\n        return [x['fileRef'] for x in build_files]\n\n    # Get the truncated paths of all headers that start with the specified\n    # relative path. Paths are read and returned as fully separated lists.\n    # e.g. ['Some', 'Path', 'To', 'A', 'Header'] with relative_path of\n    # ['Some', 'Path'] gets truncated to ['To', 'A', 'Header']\n    #\n    def movable_headers_relative_to(self, relative_path):\n        rel_path_length = len(relative_path)\n        result = filter(lambda path: len(path) >= rel_path_length and\n                                     path[:rel_path_length] == relative_path, self.header_paths)\n        return [path[rel_path_length:] for path in result]\n\n    # Get the full path to where a linkable archive (library or framework)\n    # is supposed to be.\n    #\n    def get_linked_archive_path(self, architecture):\n        return os.path.join(os.environ['OBJECT_FILE_DIR_%s' % os.environ['CURRENT_VARIANT']],\n                            architecture,\n                            os.environ['EXECUTABLE_NAME'])\n\n    # Get the full path to our custom linked archive of the project.\n    #\n    def get_linked_ufw_archive_path(self, architecture):\n        return self.get_linked_archive_path(architecture) + \".ufwbuild\"\n\n    # Get the full path to the executable of an archive.\n    #\n    def get_exe_path(self, node):\n        path = os.path.join(*node['pathComponents'])\n        if node['fileType'] == 'wrapper.framework':\n            # Frameworks are directories, so go one deeper\n            path = os.path.join(path, os.path.splitext(node['pathComponents'][-1])[0])\n        return path\n\n    # Get the path to the directory containing the archive.\n    #\n    def get_containing_path(self, node):\n        return os.path.join(*node['pathComponents'])\n    \n    def get_archive_search_paths(self):\n        log.info(\"Search paths = %s\" % set([self.get_containing_path(fw) for fw in self.static_frameworks] + [self.get_containing_path(fw) for fw in self.static_libraries]))\n        return set([self.get_containing_path(fw) for fw in self.static_frameworks] + [self.get_containing_path(fw) for fw in self.static_libraries])\n\n    # Command to link all objects of a single architecture.\n    #\n    def get_single_arch_link_command(self, architecture):\n        cmd = [self.libtool_path,\n               \"-static\",\n               \"-arch_only\", architecture,\n               \"-syslibroot\", os.environ['SDKROOT'],\n               \"-L%s\" % os.environ['TARGET_BUILD_DIR'],\n               \"-filelist\", os.environ['LINK_FILE_LIST_%s_%s' % (os.environ['CURRENT_VARIANT'], architecture)]]\n        if os.environ.get('OTHER_LDFLAGS', False):\n            cmd += [os.environ['OTHER_LDFLAGS']]\n        if os.environ.get('WARNING_LDFLAGS', False):\n            cmd += [os.environ['WARNING_LDFLAGS']]\n#        cmd += [\"-L%s\" % libpath for libpath in self.get_archive_search_paths()]\n        cmd += [self.get_exe_path(fw) for fw in self.static_frameworks]\n        cmd += [self.get_exe_path(lib) for lib in self.static_libraries]\n        cmd += [\"-o\", self.get_linked_ufw_archive_path(architecture)]\n        return cmd\n\n    # Command to link all local architectures for the current configuration\n    # into an archive. This reads all libraries + the UFW-built archives and\n    # overwrites the final product.\n    #\n    def get_local_archs_link_command(self):\n        cmd = [self.libtool_path,\n               \"-static\"]\n        cmd += self.local_linked_archive_paths\n        cmd += [self.get_exe_path(fw) for fw in self.static_frameworks]\n        cmd += [self.get_exe_path(lib) for lib in self.static_libraries]\n        cmd += [\"-o\", os.path.join(os.environ['TARGET_BUILD_DIR'], os.environ['EXECUTABLE_PATH'])]\n        return cmd\n\n    # Command to link all architectures into a universal archive.\n    # This reads all UFW-built archives and overwrites the final product.\n    #\n    def get_all_archs_link_command(self):\n        cmd = [self.libtool_path,\n               \"-static\"]\n        cmd += self.local_linked_archive_paths + self.build_state.slave_linked_archive_paths\n        cmd += [\"-o\", os.path.join(os.environ['TARGET_BUILD_DIR'], os.environ['EXECUTABLE_PATH'])]\n        return cmd\n\n    # Build up an environment for the slave process. This uses BUILD_ROOT\n    # and TEMP_ROOT to convert all environment variables to values suitable\n    # for the slave build environment so that xcodebuild doesn't try to build\n    # in the project directory under \"build\".\n    #\n    def get_slave_environment(self):\n        ignored = ['LD_MAP_FILE_PATH',\n        'HEADER_SEARCH_PATHS',\n        'LIBRARY_SEARCH_PATHS',\n        'FRAMEWORK_SEARCH_PATHS']\n        build_root = os.environ['BUILD_ROOT']\n        temp_root = os.environ['TEMP_ROOT']\n        newenv = {}\n        for key, value in os.environ.items():\n            if key not in ignored and not key.startswith('LINK_FILE_LIST_') and not key.startswith('LD_DEPENDENCY_'):\n                if build_root in value or temp_root in value:\n                    newenv[key] = value.replace(self.local_platform, self.other_platform)\n        return newenv\n\n    # Command to invoke xcodebuild on the slave platform.\n    #\n    def get_slave_project_build_command(self):\n        cmd = [\"xcodebuild\",\n               \"-project\",\n               os.environ['PROJECT_FILE_PATH'],\n               \"-target\",\n               os.environ['TARGET_NAME'],\n               \"-configuration\",\n               os.environ['CONFIGURATION'],\n               \"-sdk\",\n               self.other_platform + self.sdk_version]\n        cmd += [\"%s=%s\" % (key, value) for key, value in self.get_slave_environment().items()]\n        cmd += [\"UFW_MASTER_PLATFORM=\" + os.environ['PLATFORM_NAME']]\n        cmd += [os.environ['ACTION']]\n        return cmd\n\n\n\n##############################################################################\n#\n# Utility Functions\n#\n##############################################################################\n\n# Split a path into a list of path components.\n#\ndef splitpath(path, maxdepth=20):\n     (head, tail) = os.path.split(path)\n     return splitpath(head, maxdepth - 1) + [tail] if maxdepth and head and head != path else [ head or tail ]\n\n# Remove all subdirectories under a path.\n#\ndef remove_subdirs(path, ignore_files):\n    if os.path.exists(path):\n        for filename in filter(lambda x: x not in ignore_files, os.listdir(path)):\n            fullpath = os.path.join(path, filename)\n            if os.path.isdir(fullpath):\n                log.info(\"Remove %s\" % fullpath)\n                shutil.rmtree(fullpath)\n\n# Make whatever parent paths are necessary for a path to exist.\n#\ndef ensure_path_exists(path):\n    if not os.path.isdir(path):\n        os.makedirs(path)\n\n# Make whatever parent paths are necessary for a path's parent to exist.\n#\ndef ensure_parent_exists(path):\n    parent = os.path.dirname(path)\n    if not os.path.isdir(parent):\n        os.makedirs(parent)\n\n# Remove a file or dir if it exists.\n#\ndef remove_path(path):\n    if os.path.exists(path):\n        if os.path.isdir(path):\n            shutil.rmtree(path)\n        else:\n            os.remove(path)\n\n# Move a file or dir, replacing the destination if it exists.\n#\ndef move_file(src, dst):\n    if src == dst or not os.path.isfile(src):\n        return\n    log.info(\"Move %s to %s\" % (src, dst))\n    ensure_parent_exists(dst)\n    remove_path(dst)\n    shutil.move(src, dst)\n\n# Copy a file or dir, replacing the destination if it exists already.\n#\ndef copy_overwrite(src, dst):\n    if src != dst:\n        remove_path(dst)\n        ensure_parent_exists(dst)\n        shutil.copytree(src, dst, symlinks=True)\n\n# Attempt to symlink link_path -> link_to.\n# link_to must be a path relative to link_path's parent and must exist.\n# If link_path already exists, do nothing.\n#\ndef attempt_symlink(link_path, link_to):\n    # Only allow linking to an existing file\n    os.stat(os.path.abspath(os.path.join(link_path, \"..\", link_to)))\n\n    # Only make the link if it hasn't already been made\n    if not os.path.exists(link_path):\n        log.info(\"Symlink %s -> %s\" % (link_path, link_to))\n        os.symlink(link_to, link_path)\n\n# Takes the last entry in an array-based path and returns a normal path\n# relative to base_path.\n#\ndef top_level_file_path(base_path, path_list):\n    return os.path.join(base_path, os.path.split(path_list[-1])[-1])\n\n# Takes all entries in an array-based path and returns a normal path\n# relative to base_path.\n#\ndef full_file_path(base_path, path_list):\n    return os.path.join(*([base_path] + path_list))\n\n# Print a command before executing it.\n# Also print out all output from the command to STDOUT.\n#\ndef print_and_call(cmd):\n    log.info(\"Cmd \" + \" \".join(cmd))\n    p = subprocess.Popen(cmd, stdout=subprocess.PIPE, stderr=subprocess.STDOUT)\n    result = p.communicate()[0]\n    if len(result) > 0:\n        log.info(result)\n    if p.returncode != 0:\n        raise subprocess.CalledProcessError(p.returncode, cmd)\n\n# Special print-and-call command for the slave build that strips out\n# xcodebuild's spammy list of environment variables.\n#\ndef print_and_call_slave_build(cmd, other_platform):\n    separator = '=== BUILD NATIVE TARGET '\n    p = subprocess.Popen(cmd, stdout=subprocess.PIPE, stderr=subprocess.STDOUT)\n    result = p.communicate()[0].split(separator)\n    if len(result) == 1:\n        result = result[0]\n    else:\n        result = separator + result[1]\n    log.info(\"Cmd \" + \" \".join(cmd) + \"\\n\" + result)\n    if p.returncode != 0:\n        raise subprocess.CalledProcessError(p.returncode, cmd)\n\n# Issue a warning and record that a warning has been issued.\n#\ndef issue_warning(msg, *args, **kwargs):\n    global issued_warnings\n    issued_warnings = True\n    log.warn(msg, *args, **kwargs)\n\n\n\n##############################################################################\n#\n# Main Application\n#\n##############################################################################\n\n# Check if we are running as master.\n#\ndef is_master():\n    return os.environ.get('UFW_MASTER_PLATFORM', os.environ['PLATFORM_NAME']) == os.environ['PLATFORM_NAME']\n\n# DerivedData should almost never appear in any framework, library, or header\n# search paths. However, Xcode will sometimes add them in, so we check to make\n# sure.\n#\ndef check_for_derived_data_in_search_paths(project):\n    search_path_keys = [\"FRAMEWORK_SEARCH_PATHS\", \"LIBRARY_SEARCH_PATHS\", \"HEADER_SEARCH_PATHS\"]\n    build_configs = project.target['buildConfigurationList']['buildConfigurations']\n    build_settings = filter(lambda x: x['name'] == os.environ['CONFIGURATION'], build_configs)[0]['buildSettings']\n    \n    found_something = False\n    for path_key in filter(lambda x: x in build_settings, search_path_keys):\n        path = build_settings[path_key]\n        if \"DerivedData\" in path:\n            found_something = True\n            log.warn(\"Derived data in %s\" % path)\n            issue_warning(\"'%s' contains reference to 'DerivedData'.\" % path_key)\n    if found_something:\n        log.warn(\"Check your build settings and remove any entries that contain paths inside the DerivedData folder.\")\n        log.warn(\"Otherwise you can disable this warning by changing 'config_warn_derived_data' in this script.\")\n\n# Link local architectures into their respective archives.\n#\ndef link_local_archs(project):\n    for arch in project.local_architectures:\n        print_and_call(project.get_single_arch_link_command(arch))\n\n# Link only the local architectures into the final product, not the slave\n# architectures. For iphoneos, this will be armv6, armv7. For simulator, this\n# will be i386.\n#\ndef link_combine_local_archs(project):\n    print_and_call(project.get_local_archs_link_command())\n\n# Link all architectures into the final product.\n#\ndef link_combine_all_archs(project):\n    print_and_call(project.get_all_archs_link_command())\n\n# Check if we should open the build directory after a successful build.\n#\ndef should_open_build_dir():\n    env_setting = os.environ.get('UFW_OPEN_BUILD_DIR', None)\n    if env_setting is not None:\n        return env_setting\n\n    return config_open_build_dir\n\n# Open the build dir in Finder.\n#\ndef open_build_dir():\n    print_and_call(['open', os.environ['TARGET_BUILD_DIR']])\n\n# Check if the build was started by selecting \"Archive\" under \"Product\" in\n# Xcode.\n#\ndef is_archive_build():\n    # ACTION is always 'build', but perhaps Apple will fix this someday?\n    archive_build = os.environ['ACTION'] == 'archive'\n\n    if not archive_build:\n        # This can be passed in as an env variable when building from command line.\n        archive_build = os.environ.get('UFW_ACTION', None) == 'archive'\n\n    build_dir = splitpath(os.environ['BUILD_DIR'])\n    if not archive_build:\n        # This partial path is used when you select \"archive\" from within Xcode.\n        archive_build = 'ArchiveIntermediates' in build_dir\n\n    # It only counts as a full archive build if this target is being built into\n    # its own build dir (not being built as a dependency of another target)\n    if archive_build:\n        archive_build = os.environ['TARGET_NAME'] in build_dir\n    \n    return archive_build\n\n# Xcode by default throws all public headers into the top level directory.\n# This function moves them to their expected deep hierarchy.\n#\ndef build_deep_header_hierarchy(project):\n    header_path_top = config_deep_header_top\n    if not header_path_top:\n        header_path_top = os.path.commonprefix(project.header_paths)\n    else:\n        header_path_top = splitpath(header_path_top)\n\n    built_headers_path = os.path.join(os.environ['TARGET_BUILD_DIR'], os.environ['PUBLIC_HEADERS_FOLDER_PATH'])\n    movable_headers = project.movable_headers_relative_to(header_path_top)\n\n    # Remove subdirs if they only contain files that have been rebuilt\n    ignore_headers = filter(lambda x: not os.path.isfile(top_level_file_path(built_headers_path, x)), movable_headers)\n    remove_subdirs(built_headers_path, [file[0] for file in ignore_headers])\n\n    # Move rebuilt headers into their proper subdirs\n    for header in movable_headers:\n        move_file(top_level_file_path(built_headers_path, header), full_file_path(built_headers_path, header))\n\n# Add all symlinks needed to make a full framework structure:\n#\n# MyFramework.framework\n# |-- MyFramework -> Versions/Current/MyFramework\n# |-- Headers -> Versions/Current/Headers\n# |-- Resources -> Versions/Current/Resources\n# `-- Versions\n#     |-- A\n#     |   |-- MyFramework\n#     |   |-- Headers\n#     |   |   `-- MyFramework.h\n#     |   `-- Resources\n#     |       |-- Info.plist\n#     |       |-- MyViewController.nib\n#     |       `-- en.lproj\n#     |           `-- InfoPlist.strings\n#     `-- Current -> A\n#\ndef add_symlinks_to_framework(project):\n    base_dir = project.local_built_fw_path\n    attempt_symlink(os.path.join(base_dir, \"Versions\", \"Current\"), os.environ['FRAMEWORK_VERSION'])\n    if os.path.isdir(os.path.join(base_dir, \"Versions\", \"Current\", \"Headers\")):\n        attempt_symlink(os.path.join(base_dir, \"Headers\"), os.path.join(\"Versions\", \"Current\", \"Headers\"))\n    if os.path.isdir(os.path.join(base_dir, \"Versions\", \"Current\", \"Resources\")):\n        attempt_symlink(os.path.join(base_dir, \"Resources\"), os.path.join(\"Versions\", \"Current\", \"Resources\"))\n    attempt_symlink(os.path.join(base_dir, os.environ['EXECUTABLE_NAME']), os.path.join(\"Versions\", \"Current\", os.environ['EXECUTABLE_NAME']))\n\n# Build an embedded framework structure.\n# An embedded framework contains the actual framework, plus a \"Resources\"\n# directory containing symlinks to all resources found in the actual framework,\n# with the exception of \"Info.plist\" and anything ending in \".lproj\":\n#\n# MyFramework.embeddedframework\n# |-- MyFramework.framework\n# |   |-- MyFramework -> Versions/Current/MyFramework\n# |   |-- Headers -> Versions/Current/Headers\n# |   |-- Resources -> Versions/Current/Resources\n# |   `-- Versions\n# |       |-- A\n# |       |   |-- MyFramework\n# |       |   |-- Headers\n# |       |   |   `-- MyFramework.h\n# |       |   `-- Resources\n# |       |       |-- Info.plist\n# |       |       |-- MyViewController.nib\n# |       |       `-- en.lproj\n# |       |           `-- InfoPlist.strings\n# |       `-- Current -> A\n# `-- Resources\n#     `-- MyViewController.nib -> ../MyFramework.framework/Resources/MyViewController.nib\n#\ndef build_embedded_framework(project):\n    fw_path = project.local_built_fw_path\n    embedded_path = project.local_built_embedded_fw_path\n    fw_name = os.environ['WRAPPER_NAME']\n    remove_path(embedded_path)\n    ensure_path_exists(embedded_path)\n    copy_overwrite(fw_path, os.path.join(embedded_path, fw_name))\n    ensure_path_exists(os.path.join(embedded_path, \"Resources\"))\n    symlink_source = os.path.join(\"..\", fw_name, \"Resources\")\n    symlink_path = os.path.join(embedded_path, \"Resources\")\n    if os.path.isdir(os.path.join(fw_path, \"Resources\")):\n        for file in filter(lambda x: x != \"Info.plist\" and not x.endswith(\".lproj\"), os.listdir(os.path.join(fw_path, \"Resources\"))):\n            attempt_symlink(os.path.join(symlink_path, file), os.path.join(symlink_source, file))\n\n    # Remove the normal framework and replace it with a symlink to the copy\n    # in the embedded framework. This is needed because Xcode runs its strip\n    # phase AFTER the script runs.\n    embed_fw_wrapper = os.path.splitext(os.environ['WRAPPER_NAME'])[0] + \".embeddedframework\"\n    remove_path(fw_path)\n    attempt_symlink(fw_path, os.path.join(embed_fw_wrapper, os.environ['WRAPPER_NAME']))\n\n\n# Run the build process in slave mode to build the other configuration\n# (device/simulator).\n#\ndef run_slave_build(project):\n    print_and_call_slave_build(project.get_slave_project_build_command(), project.other_platform)\n\n# Run the build process.\n#\ndef run_build():\n    project = Project(os.path.join(os.environ['PROJECT_FILE_PATH'], \"project.pbxproj\"))\n\n    # Issue warnings only if we're master.\n    if is_master():\n        if len(project.compilable_sources) == 0:\n            raise Exception(\"No compilable sources found. Please add at least one source file to build target %s.\" % os.environ['TARGET_NAME'])\n\n        if config_warn_derived_data:\n            check_for_derived_data_in_search_paths(project)\n        if config_warn_no_public_headers and len(project.public_headers) == 0:\n            issue_warning('No headers in build target %s were marked public. Please move at least one header to \"Public\" in the \"Copy Headers\" build phase.' % os.environ['TARGET_NAME'])\n\n    # Only build slave if this is an archive build.\n    if is_archive_build():\n        if is_master():\n            log.debug(\"Building as MASTER\")\n            # The slave-side linker tries to include this (nonexistent) path as\n            # a library path.\n            ensure_path_exists(project.get_slave_environment()['BUILT_PRODUCTS_DIR'])\n            project.build_state.persist()\n            run_slave_build(project)\n            project.build_state.reload()\n        else:\n            log.debug(\"Building as SLAVE\")\n            project.build_state.reload()\n            project.build_state.set_slave_properties(project.local_architectures,\n                                                     project.local_linked_archive_paths,\n                                                     project.local_built_fw_path,\n                                                     project.local_built_embedded_fw_path)\n            project.build_state.persist()\n\n    link_local_archs(project)\n    \n    # Only do a universal binary when building an archive.\n    if is_archive_build() and is_master():\n        link_combine_all_archs(project)\n    else:\n        link_combine_local_archs(project)\n\n    if config_deep_header_hierarchy:\n        build_deep_header_hierarchy(project)\n\n    add_symlinks_to_framework(project)\n    \n    if is_master():\n        if config_framework_type == 'embeddedframework':\n            build_embedded_framework(project)\n        elif config_framework_type != 'framework':\n            raise Exception(\"%s: Unknown framework type for config_framework_type\" % config_framework_type)\n\n\nif __name__ == \"__main__\":\n    log_handler = logging.StreamHandler()\n    log_handler.setFormatter(logging.Formatter(\"%(name)s (\" + os.environ['PLATFORM_NAME'] + \"): %(levelname)s: %(message)s\"))\n    log.addHandler(log_handler)\n    log.setLevel(config_log_level)\n\n    error_code = 0\n    prefix = \"M\" if is_master() else \"S\"\n    log_handler.setFormatter(logging.Formatter(\"%(name)s (\" + prefix + \" \" + os.environ['PLATFORM_NAME'] + \"): %(levelname)s: %(message)s\"))\n\n    log.debug(\"Begin build process\")\n\n    if config_deep_header_top:\n        config_deep_header_top = string.Template(config_deep_header_top).substitute(os.environ)\n\n    try:\n        run_build()\n        if issued_warnings:\n            if config_fail_on_warnings:\n                error_code = 1\n            log.warn(\"Build completed with warnings\")\n        else:\n            log.info(\"Build completed\")\n        if not is_archive_build():\n            log.info(\"Note: This is *NOT* a universal framework build. To build as a universal framework, do an archive build.\")\n            log.info(\"To do an archive build from command line, use \\\"xcodebuild -configuration Release UFW_ACTION=archive clean build\\\"\")\n    except Exception:\n        traceback.print_exc(file=sys.stdout)\n        error_code = 1\n        log.error(\"Build failed\")\n    finally:\n        if error_code == 0 and is_archive_build() and is_master():\n            log.info(\"Built framework is in \" + os.environ['TARGET_BUILD_DIR'])\n            if should_open_build_dir():\n                open_build_dir()\n        sys.exit(error_code)\n";
			showEnvVarsInLog = 0;
		};
		453EA95326FB780D6ED52F5A /* Check Pods Manifest.lock */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			name = "Check Pods Manifest.lock";
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "diff \"${PODS_ROOT}/../Podfile.lock\" \"${PODS_ROOT}/Manifest.lock\" > /dev/null\nif [[ $? != 0 ]] ; then\n    cat << EOM\nerror: The sandbox is not in sync with the Podfile.lock. Run 'pod install' or update your CocoaPods installation.\nEOM\n    exit 1\nfi\n";
			showEnvVarsInLog = 0;
		};
		A6BF14B5F021A4B4437808CD /* Copy Pods Resources */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			name = "Copy Pods Resources";
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "\"${SRCROOT}/Pods/Target Support Files/Pods/Pods-resources.sh\"\n";
			showEnvVarsInLog = 0;
		};
/* End PBXShellScriptBuildPhase section */

/* Begin PBXSourcesBuildPhase section */
		074D9F391AE7DD04006D1510 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				075C6C411AE9093F0021DB91 /* IFAppContainer.m in Sources */,
				079A17671AE7EC8000F22F4E /* UIColor+IF.m in Sources */,
				07D025231AEAC1D200C2A619 /* IFI18nMap.m in Sources */,
				079A16CB1AE7DDE800F22F4E /* IFFileIO.m in Sources */,
				079A17531AE7E3A600F22F4E /* DispatchQueueLogFormatter.m in Sources */,
				079A16DF1AE7DDE800F22F4E /* NSString+IF.m in Sources */,
				07E3CFD31BDE6BF00036722B /* UIViewController+Toast.m in Sources */,
				07287EE41BD95EBE00047B0C /* IFDoScheme.m in Sources */,
				079A16D11AE7DDE800F22F4E /* IFRegExp.m in Sources */,
				07287ECD1BD8F90C00047B0C /* IFDefaultTargetContainerBehaviour.m in Sources */,
				079A16BF1AE7DDE800F22F4E /* IFLocalSchemeHandler.m in Sources */,
				07E3CFC61BDC15390036722B /* IFTableViewController.m in Sources */,
				079A176B1AE7EE7600F22F4E /* IFLocals.m in Sources */,
				07E3CFA31BD98D290036722B /* SWRevealViewController.m in Sources */,
				079A172E1AE7DF2D00F22F4E /* ZipArchive.mm in Sources */,
				079A16CD1AE7DDE800F22F4E /* IFHTTPUtils.m in Sources */,
				079A17331AE7E15D00F22F4E /* ISO8601DateFormatter.m in Sources */,
				079A17731AE7F80B00F22F4E /* IFContainer.m in Sources */,
				079A17291AE7DF2D00F22F4E /* unzip.c in Sources */,
				07E3CFA71BD98D930036722B /* IFSlideViewController.m in Sources */,
				07E3CFDB1BDEC1B20036722B /* UIImage+CropScale.m in Sources */,
				07E3CFB71BDADE550036722B /* IFWebViewController.m in Sources */,
				07287EDC1BD9424800047B0C /* IFTargetContainerVIewController.m in Sources */,
				079A17511AE7E3A600F22F4E /* ContextFilterLogFormatter.m in Sources */,
				079A16D31AE7DDE800F22F4E /* IFStringTemplate.m in Sources */,
				079A16B91AE7DDE800F22F4E /* IFCompoundURI.m in Sources */,
				079A16D71AE7DDE800F22F4E /* IFTypeConversions.m in Sources */,
				079A16C11AE7DDE800F22F4E /* IFResource.m in Sources */,
				07E3CFAC1BDA73C50036722B /* IFProxyTargetContainer.m in Sources */,
				079A17251AE7DF2D00F22F4E /* ioapi.c in Sources */,
				07287EE81BD9768500047B0C /* IFNamedScheme.m in Sources */,
				079A17491AE7E3A600F22F4E /* DDASLLogger.m in Sources */,
				07287EF01BD978AC00047B0C /* IFMakeScheme.m in Sources */,
				079A17271AE7DF2D00F22F4E /* mztools.c in Sources */,
				079A176F1AE7F3F800F22F4E /* IFConfiguredLocals.m in Sources */,
				07E3CFD71BDE6E360036722B /* NSDictionary+IFValues.m in Sources */,
				07E3CFBE1BDC0A2F0036722B /* IFTableData.m in Sources */,
				079A16C71AE7DDE800F22F4E /* IFURIResolver.m in Sources */,
				079A174B1AE7E3A600F22F4E /* DDFileLogger.m in Sources */,
				079A17611AE7EB1B00F22F4E /* IFConfiguration.m in Sources */,
				079A172B1AE7DF2D00F22F4E /* zip.c in Sources */,
				07E3CFCF1BDE6B1F0036722B /* UIView+Toast.m in Sources */,
				07E3CFC21BDC11CC0036722B /* IFTableViewCellFactory.m in Sources */,
				079A174D1AE7E3A600F22F4E /* DDLog.m in Sources */,
				079A16BB1AE7DDE800F22F4E /* IFFileBasedSchemeHandler.m in Sources */,
				079A174F1AE7E3A600F22F4E /* DDTTYLogger.m in Sources */,
				079A16C51AE7DDE800F22F4E /* IFStringSchemeHandler.m in Sources */,
				07287EF51BD9828400047B0C /* IFNavigationViewController.m in Sources */,
				079A16BD1AE7DDE800F22F4E /* IFFileResource.m in Sources */,
				079A16DB1AE7DDE800F22F4E /* NSArray+IF.m in Sources */,
				079A16CF1AE7DDE800F22F4E /* IFJSONData.m in Sources */,
				07287ED11BD8FF7F00047B0C /* IFStringRewriteRules.m in Sources */,
				079A17471AE7E3A600F22F4E /* DDAbstractDatabaseLogger.m in Sources */,
				07287EEC1BD9774B00047B0C /* IFNewScheme.m in Sources */,
				079ECCAC1AE8441900A3DD41 /* IFTypeInfo.m in Sources */,
				074D9F4E1AE7DD04006D1510 /* SemoCore.m in Sources */,
				079A16DD1AE7DDE800F22F4E /* NSDictionary+IF.m in Sources */,
				079A170E1AE7DF2D00F22F4E /* JSONKit.m in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		07E287EC1AEBA7750078B95B /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				07E2880D1AEBA9CE0078B95B /* Fruit.m in Sources */,
				07E288071AEBA96A0078B95B /* Thing.m in Sources */,
				072D65391AEBFAF9009BC9A4 /* IOCConfigurable.m in Sources */,
				07E288131AEBAC7F0078B95B /* Plant.m in Sources */,
				07E2880A1AEBA98F0078B95B /* Color.m in Sources */,
				07E288191AEBADA80078B95B /* Configurable.m in Sources */,
				07E288101AEBA9F60078B95B /* Animal.m in Sources */,
				07E287FC1AEBA7750078B95B /* SemoCore_Tests.m in Sources */,
				07E288161AEBAD3C0078B95B /* Forest.m in Sources */,
				07E288041AEBA9080078B95B /* AppContainerTest.m in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXSourcesBuildPhase section */

/* Begin PBXTargetDependency section */
		07E287FF1AEBA7750078B95B /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 074D9F3E1AE7DD04006D1510 /* SemoCore */;
			targetProxy = 07E287FE1AEBA7750078B95B /* PBXContainerItemProxy */;
		};
/* End PBXTargetDependency section */

/* Begin PBXVariantGroup section */
		07E287F81AEBA7750078B95B /* InfoPlist.strings */ = {
			isa = PBXVariantGroup;
			children = (
				07E287F91AEBA7750078B95B /* en */,
			);
			name = InfoPlist.strings;
			sourceTree = "<group>";
		};
/* End PBXVariantGroup section */

/* Begin XCBuildConfiguration section */
		074D9F4F1AE7DD04006D1510 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				CLANG_CXX_LANGUAGE_STANDARD = "gnu++0x";
				CLANG_CXX_LIBRARY = "libc++";
				CLANG_ENABLE_MODULES = YES;
				CLANG_ENABLE_OBJC_ARC = YES;
				CLANG_WARN_BOOL_CONVERSION = YES;
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;
				CLANG_WARN_UNREACHABLE_CODE = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				COPY_PHASE_STRIP = NO;
				ENABLE_STRICT_OBJC_MSGSEND = YES;
				ENABLE_TESTABILITY = YES;
				GCC_C_LANGUAGE_STANDARD = gnu99;
				GCC_DYNAMIC_NO_PIC = NO;
				GCC_NO_COMMON_BLOCKS = YES;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"DEBUG=1",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
				GCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR;
				GCC_WARN_UNDECLARED_SELECTOR = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;
				GCC_WARN_UNUSED_FUNCTION = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				MTL_ENABLE_DEBUG_INFO = YES;
				ONLY_ACTIVE_ARCH = YES;
			};
			name = Debug;
		};
		074D9F501AE7DD04006D1510 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				CLANG_CXX_LANGUAGE_STANDARD = "gnu++0x";
				CLANG_CXX_LIBRARY = "libc++";
				CLANG_ENABLE_MODULES = YES;
				CLANG_ENABLE_OBJC_ARC = YES;
				CLANG_WARN_BOOL_CONVERSION = YES;
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;
				CLANG_WARN_UNREACHABLE_CODE = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				COPY_PHASE_STRIP = NO;
				ENABLE_NS_ASSERTIONS = NO;
				ENABLE_STRICT_OBJC_MSGSEND = YES;
				GCC_C_LANGUAGE_STANDARD = gnu99;
				GCC_NO_COMMON_BLOCKS = YES;
				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
				GCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR;
				GCC_WARN_UNDECLARED_SELECTOR = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;
				GCC_WARN_UNUSED_FUNCTION = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				MTL_ENABLE_DEBUG_INFO = NO;
			};
			name = Release;
		};
		074D9F521AE7DD04006D1510 /* Debug */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = 40F4305D2BB1A1E6388AC531 /* Pods.debug.xcconfig */;
			buildSettings = {
				DYLIB_COMPATIBILITY_VERSION = 1;
				DYLIB_CURRENT_VERSION = 1;
				FRAMEWORK_VERSION = A;
				GCC_THUMB_SUPPORT = NO;
				INFOPLIST_FILE = SemoCore/Info.plist;
				IPHONEOS_DEPLOYMENT_TARGET = 7.0;
				PRODUCT_BUNDLE_IDENTIFIER = "com.innerfunction.$(PRODUCT_NAME:rfc1034identifier)";
				PRODUCT_NAME = "$(TARGET_NAME)";
				SDKROOT = iphoneos;
				SKIP_INSTALL = YES;
				WRAPPER_EXTENSION = framework;
			};
			name = Debug;
		};
		074D9F531AE7DD04006D1510 /* Release */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = 9A09DB48BD2885B33FCC5B03 /* Pods.release.xcconfig */;
			buildSettings = {
				DYLIB_COMPATIBILITY_VERSION = 1;
				DYLIB_CURRENT_VERSION = 1;
				FRAMEWORK_VERSION = A;
				GCC_THUMB_SUPPORT = NO;
				INFOPLIST_FILE = SemoCore/Info.plist;
				IPHONEOS_DEPLOYMENT_TARGET = 7.0;
				PRODUCT_BUNDLE_IDENTIFIER = "com.innerfunction.$(PRODUCT_NAME:rfc1034identifier)";
				PRODUCT_NAME = "$(TARGET_NAME)";
				SDKROOT = iphoneos;
				SKIP_INSTALL = YES;
				WRAPPER_EXTENSION = framework;
			};
			name = Release;
		};
		07E288001AEBA7750078B95B /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				BUNDLE_LOADER = "$(BUILT_PRODUCTS_DIR)/SemoCore.app/SemoCore";
				FRAMEWORK_SEARCH_PATHS = (
					"$(SDKROOT)/Developer/Library/Frameworks",
					"$(inherited)",
					"$(DEVELOPER_FRAMEWORKS_DIR)",
					"$(DEVELOPER_DIR)/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS8.3.sdk/System/Library/Frameworks",
				);
				GCC_PRECOMPILE_PREFIX_HEADER = YES;
				GCC_PREFIX_HEADER = "SemoCore Tests/SemoCore Tests-Prefix.pch";
				GCC_PREPROCESSOR_DEFINITIONS = (
					"DEBUG=1",
					"$(inherited)",
				);
				INFOPLIST_FILE = "SemoCore Tests/SemoCore Tests-Info.plist";
				IPHONEOS_DEPLOYMENT_TARGET = 7.1;
				PRODUCT_BUNDLE_IDENTIFIER = "IF.${PRODUCT_NAME:rfc1034identifier}";
				PRODUCT_NAME = "$(TARGET_NAME)";
				SDKROOT = iphoneos;
				TEST_HOST = "$(BUNDLE_LOADER)";
				WRAPPER_EXTENSION = xctest;
			};
			name = Debug;
		};
		07E288011AEBA7750078B95B /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				BUNDLE_LOADER = "$(BUILT_PRODUCTS_DIR)/SemoCore.app/SemoCore";
				COPY_PHASE_STRIP = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(SDKROOT)/Developer/Library/Frameworks",
					"$(inherited)",
					"$(DEVELOPER_FRAMEWORKS_DIR)",
					"$(DEVELOPER_DIR)/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS8.3.sdk/System/Library/Frameworks",
				);
				GCC_PRECOMPILE_PREFIX_HEADER = YES;
				GCC_PREFIX_HEADER = "SemoCore Tests/SemoCore Tests-Prefix.pch";
				INFOPLIST_FILE = "SemoCore Tests/SemoCore Tests-Info.plist";
				IPHONEOS_DEPLOYMENT_TARGET = 7.1;
				PRODUCT_BUNDLE_IDENTIFIER = "IF.${PRODUCT_NAME:rfc1034identifier}";
				PRODUCT_NAME = "$(TARGET_NAME)";
				SDKROOT = iphoneos;
				TEST_HOST = "$(BUNDLE_LOADER)";
				VALIDATE_PRODUCT = YES;
				WRAPPER_EXTENSION = xctest;
			};
			name = Release;
		};
/* End XCBuildConfiguration section */

/* Begin XCConfigurationList section */
		074D9F381AE7DD04006D1510 /* Build configuration list for PBXProject "SemoCore" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				074D9F4F1AE7DD04006D1510 /* Debug */,
				074D9F501AE7DD04006D1510 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		074D9F511AE7DD04006D1510 /* Build configuration list for PBXNativeTarget "SemoCore" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				074D9F521AE7DD04006D1510 /* Debug */,
				074D9F531AE7DD04006D1510 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		07E288021AEBA7750078B95B /* Build configuration list for PBXNativeTarget "SemoCore Tests" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				07E288001AEBA7750078B95B /* Debug */,
				07E288011AEBA7750078B95B /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
/* End XCConfigurationList section */
	};
	rootObject = 074D9F351AE7DD04006D1510 /* Project object */;
}
